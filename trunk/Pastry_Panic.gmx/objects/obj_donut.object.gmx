<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_donut</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = irandom_range(0,7);
sel = 0;
h = 0;
sgx = x;
sgy = y;
mx = 0;
my = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Highlight donuts on mouse over
var hsize,xx,yy;
hsize = 1.1;
xx = mouse_x+sprite_xoffset;
yy = mouse_y+sprite_yoffset;
if (xx &gt; x and xx &lt; x+sprite_width*0.9
and yy &gt; y and yy &lt; y+sprite_height*0.9
and not mouse_check_button(mb_left))
{
    h = 1;
};
else if (sel == 0)
{
    h = 0;
};
if (h == 1 and image_xscale &lt; hsize)
{
    image_xscale += 0.015;
    image_yscale += 0.015;
    //depth = -1;
};
if (h == 0 and image_xscale &gt; 1)
{
    image_xscale -= 0.015;
    image_yscale -= 0.015;
    //depth = 0;
};
//Move to correct position
if ((sgx &gt; x or sgx &lt; x))
{
    x = (x*4 + sgx)/5;
};
if ((sgy &gt; y or sgy &lt; y))
{
    y = (y*4 + sgy)/5;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var switchdir,xx,yy,target;
xx = mouse_x;
yy = mouse_y;
if (point_distance(mx,my,xx,yy)&gt;16 and sel == 1)
{
    switchdir = round(point_direction(mx,my,xx,yy)/90);
    target = collision_point(x+lengthdir_x(sprite_width,switchdir*90),y+lengthdir_y(sprite_height,switchdir*90),obj_donut,0,1);
    sgx = target.x;
    sgy = target.y;
    global.stx = x;
    global.sty = y;
    with (target)
    {
        sgx = global.stx;
        sgy = global.sty;
    };
};
sel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sel = h;
mx = mouse_x;
my = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>65,65</point>
  </PhysicsShapePoints>
</object>
