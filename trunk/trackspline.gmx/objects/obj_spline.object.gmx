<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count = 0
drag = -1
side = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drag = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=1;i&lt;count;i+=1)
{
    var pos1,pos2,pos3;
    pos1 = nodes[i]
    pos2 = vec2(pos1[1] + lengthdir_x(pos1[4],pos1[3]) , pos1[2] + lengthdir_y(pos1[4],pos1[3]))
    pos3 = vec2(pos1[1] - lengthdir_x(pos1[4],pos1[3]) , pos1[2] - lengthdir_y(pos1[4],pos1[3]))
    
    if(point_distance(mouse_x,mouse_y,pos2[1],pos2[2])&lt;16)
    {
        drag = i
        side = 0
        break
    }
    
    if(point_distance(mouse_x,mouse_y,pos3[1],pos3[2])&lt;16)
    {
        drag = i
        side = 1
        break
    }
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count += 1
if(count==1)
{
nodes[count] = vec4(mouse_x,mouse_y,0,32)
}

if(count&gt;1)
{
var pos1;
pos1 = nodes[count-1]
nodes[count] = vec4(mouse_x,mouse_y,point_direction(pos1[1],pos1[2],mouse_x,mouse_y),32)
}

if(count&gt;2)
{
var vec,pos1,pos2,dir,d1,d2,d3,d4;
vec = nodes[count-1]
pos1 = nodes[count-2]
pos2 = nodes[count]

dir = point_direction(pos1[1],pos1[2],pos2[1],pos2[2])
d1 = point_distance(pos1[1],pos1[2],pos2[1],pos2[2])
d2 = point_distance(pos1[1],pos1[2],vec[1],vec[2])
d3 = point_distance(vec[1],vec[2],pos2[1],pos2[2])
d4 = (d2+d3)/6

nodes[count-1] = vec4(vec[1],vec[2],dir,min(d1,d4))
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(drag!=-1)
{
    var vec,px,py,dir,dist;
    vec = nodes[drag]
    px = vec[1]
    py = vec[2]
    
    dir = point_direction(px,py,mouse_x,mouse_y) + 180*side
    dist = point_distance(px,py,mouse_x,mouse_y)
    
    nodes[drag] = vec4(vec[1],vec[2],dir,dist)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prec = 0.05

for(i=1;i&lt;count;i+=1)
{
    var pos1,pos2,pos3,pos4,lpos,cpos;
    pos1 = nodes[i]
    pos2 = vec2(pos1[1] + lengthdir_x(pos1[4],pos1[3]) , pos1[2] + lengthdir_y(pos1[4],pos1[3]))
    pos4 = nodes[i+1]
    pos3 = vec2(pos4[1] - lengthdir_x(pos4[4],pos4[3]) , pos4[2] - lengthdir_y(pos4[4],pos4[3]))
    lpos = pos1
    
    draw_set_color(c_black)
        
    for(j=prec;j&lt;=1;j+=prec)
    {
        cpos = spline4(pos1,pos2,pos3,pos4,j)
        draw_line(cpos[1],cpos[2],lpos[1],lpos[2])
        lpos = cpos
    }
    
    draw_set_color(c_red)
    
    draw_line(pos1[1],pos1[2],pos2[1],pos2[2])
    draw_line(pos3[1],pos3[2],pos4[1],pos4[2])
    
    draw_circle(pos1[1],pos1[2],4,true)
    draw_circle(pos4[1],pos4[2],4,true)
    
    draw_set_color(c_blue)
    
    draw_circle(pos2[1],pos2[2],4,true)
    draw_circle(pos3[1],pos3[2],4,true)
        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
