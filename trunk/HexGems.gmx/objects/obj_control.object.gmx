<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center)
draw_set_valign(fa_middle)

xoff = 80
yoff = 80
hexw = 64
hexh = 56
width = 14
height = 12

colors[1] = merge_color(c_yellow,c_white,0.5)
colors[2] = merge_color(c_green,c_white,0.5)
colors[3] = merge_color(c_blue,c_white,0.5)
colors[4] = merge_color(c_red,c_white,0.5)
colors[5] = c_white

scr_creategrid()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var hmod,dx,dy,mx,my,col;

my = round(( mouse_y-xoff )/hexh)
mx = round(( mouse_x-xoff- (my mod 2)*(hexw/2) )/hexw)

for(j=0;j&lt;height;j++)
{
    for(i=0;i&lt;width;i++)
    {
        if(grid[i,j]&gt;=0)
        {
            hmod = (j mod 2)
            dx = xoff + (i + hmod/2)*hexw
            dy = yoff + j*hexh
            
            col = c_white
            if(i==mx and j==my){col = c_green}
            if(i==mx-1 and j==my){col = c_yellow}
            if(i==mx+1 and j==my){col = c_yellow}
            if(i==mx and j==my-1){col = c_yellow}
            if(i==mx and j==my+1){col = c_yellow}
            if(i==mx+1-(hmod*2) and j==my-1){col = c_yellow}
            if(i==mx+1-(hmod*2) and j==my+1){col = c_yellow}
            
            draw_sprite_ext(spr_hex,0,dx,dy,0.25,0.25,0,col,1)
            
            if(grid[i,j]&gt;0)
            {
                draw_sprite_ext(spr_gem,0,dx,dy,0.4,0.4,0,colors[grid[i,j]],1)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_creategrid()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
