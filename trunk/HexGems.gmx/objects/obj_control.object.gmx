<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hex</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width = 9
height = 6
hexw = room_width/(width+2)
hexh = hexw*sin(degtorad(60))
xoff = room_width/2-(hexw*width)/2.6
yoff = room_height/2-(hexh*height)/2.4

globalvar count,activehex,lost,spreadturns;
count = 0
activehex = 0
lost = 0
spreadturns = 0

hexes_clean = ds_list_create()
hexes_infected = ds_list_create()

spread_delay = game_diff
next_spread = spread_delay-1
spreadmeter = 1

randomize()
scr_creategrid()

image_index = 1
image_speed = 0

overview = 0
overview_smooth = 0

name = "none";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
hexes_infected = ds_list_create()
hexes_clean = ds_list_create()
with(obj_hex)
{
    if(status==0)
    {
        ds_list_add(obj_control.hexes_infected,id)
    }
    else
    {
        ds_list_add(obj_control.hexes_clean,id)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>overview = 1

if(os_type==os_windows)
{
    keyboard_string = game_name
}
else
{

    name = get_string_async("High Score Name:",game_name)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(os_type!=os_windows and lost!=0 and overview_smooth&gt;0.99)
{
    highscore_add(keyboard_string,score)
    game_name = keyboard_string
    ini_open("settings.ini")
    ini_write_string("game","name",keyboard_string)
    ini_close()
    room_goto(rm_menu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_d = ds_map_find_value(async_load, "id");
if i_d == name
{
    if ds_map_find_value(async_load, "status")
    {
        if ds_map_find_value(async_load, "result") != ""
        {
            keyboard_string = ds_map_find_value(async_load, "result");
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_set_color(blue)
draw_rectangle(x,y,x-112,room_height-y*2,false)
draw_set_color(c_white)
draw_rectangle(x-16,y+128,x-112+16,room_height-y*2 -16,false)
var purp = make_color_rgb(168,137,206);
draw_set_color(purp)
var diff,str,scl;
diff = (room_height-y*2-24)-(y+128+8)
spreadmeter = (spreadmeter*4 + ((next_spread)/(spread_delay-1)) )/5
draw_rectangle(x-24,y+128+8 + diff*spreadmeter,x-112+24,room_height-y*2 -24,false)

//Game End Overview
overview_smooth = (overview_smooth*4 + overview)/5

draw_set_color(c_black)
draw_set_alpha(0.5)
str = string(spreadturns)
scl = min(0.56,64/string_width(str))
draw_text_transformed(x-56,y+384,str,scl,scl,0)

draw_set_color(c_white)
draw_set_alpha(0+overview_smooth*0.75)
draw_rectangle(0,0,room_width,room_height,false)
draw_set_alpha(1)
draw_set_color(blue2)
draw_roundrect_ext(lerp(x-72,384-16,overview_smooth),lerp(y-72,256-16,overview_smooth),lerp(x+72,room_width-384+16,overview_smooth),lerp(y+72,room_height-256+16,overview_smooth),64,64,false)
draw_set_color(blue)
draw_roundrect_ext(lerp(x-72,384,overview_smooth),lerp(y-72,256,overview_smooth),lerp(x+72,room_width-384,overview_smooth),lerp(y+72,room_height-256,overview_smooth),64,64,false)
draw_set_color(blue3)

draw_set_color(c_black)
draw_set_alpha(0.5)

str = string(score)
scl = lerp(min(1,215/string_width(str)),1,overview_smooth)
draw_text_transformed(lerp(x,room_width/2,overview_smooth),lerp(y,room_height/2,overview_smooth),str,scl,scl,0)

draw_set_alpha(1)

draw_set_alpha(max(0,-1+overview_smooth*1.5))

keyboard_string = string_copy(keyboard_string,1,12)

if(sin(current_time/100)&lt;0)
draw_text(lerp(x,room_width/2,overview_smooth),lerp(y,room_height/2+128,overview_smooth),keyboard_string+"|")
else
draw_text(lerp(x,room_width/2,overview_smooth),lerp(y,room_height/2+128,overview_smooth),keyboard_string)
draw_line_width(lerp(x,room_width/2-512,overview_smooth),lerp(y,room_height/2+192,overview_smooth),lerp(x,room_width/2+512,overview_smooth),lerp(y,room_height/2+192,overview_smooth),8)
if(lost==1)
{
    draw_text(lerp(x,room_width/2,overview_smooth),lerp(y-64,room_height/2-128,overview_smooth),"LOSER")
}
if(lost==-1)
{
    draw_text(lerp(x,room_width/2,overview_smooth),lerp(y-64,room_height/2-128,overview_smooth),"WINNER")
}
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(lost==false)
{
    alarm[10] = 1
    game_save("save.dat")
    room_goto(rm_menu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(os_type==os_windows and lost!=0 and overview_smooth&gt;0.99)
{
    highscore_add(keyboard_string,score)
    game_name = keyboard_string
    ini_open("settings.ini")
    ini_write_string("game","name",keyboard_string)
    ini_close()
    room_goto(rm_menu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(lost==false)
{
    alarm[10] = 1
    game_save("save.dat")
    room_goto(rm_menu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
