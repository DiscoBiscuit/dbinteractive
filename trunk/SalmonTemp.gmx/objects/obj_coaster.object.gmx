<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>res = 300
zoff = 96
hscl = 0.75
zscl = 3
global.VIEW_ANGLE = 30
global.VIEW_DIRECTION = 45
c = 0
cspeed = 0

x = room_width/2
y = room_height/2


zc = (path_get_y(coaster_z,c)+ zoff)*zscl
xc = plane_x(path_get_x(coaster_xy,c),path_get_y(coaster_xy,c),global.VIEW_DIRECTION)*hscl
yc = plane_y(path_get_x(coaster_xy,c),path_get_y(coaster_xy,c),global.VIEW_DIRECTION)*hscl
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.VIEW_DIRECTION += keyboard_check(vk_left)-keyboard_check(vk_right)
global.VIEW_ANGLE = clamp(global.VIEW_ANGLE+keyboard_check(vk_up)-keyboard_check(vk_down),0,90)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ymod = sin(degtorad(global.VIEW_ANGLE))
h = sin(arccos(ymod))/2

var p,x1,y1,x2,y2,z1,z2;
x1 = x+plane_x(path_get_x(coaster_xy,0),path_get_y(coaster_xy,0),global.VIEW_DIRECTION)*hscl
y1 = y+plane_y(path_get_x(coaster_xy,0),path_get_y(coaster_xy,0),global.VIEW_DIRECTION)*ymod*hscl
z1 = (path_get_y(coaster_z,0)+ zoff)*h*zscl
x2 = x1
y2 = y1
z2 = z1
for(i=0;i&lt;=res;i+=1)
{
    p = (1/res)*i
    
    x2 = x1
    y2 = y1
    z2 = z1
    x1 = x+plane_x(path_get_x(coaster_xy,p),path_get_y(coaster_xy,p),global.VIEW_DIRECTION)*hscl
    y1 = y+plane_y(path_get_x(coaster_xy,p),path_get_y(coaster_xy,p),global.VIEW_DIRECTION)*ymod*hscl
    z1 = (path_get_y(coaster_z,p)+ zoff)*h*zscl
    
    draw_line(x1,y1-z1,x2,y2-z2)
    if(i mod 6 = 0)
    draw_line(x1,y1,x1,y1-z1)
    
}


var tx,ty,tz,n;
tx = xc
ty = yc
tz = zc
n = 0

while(point_distance_3d(tx,ty,tz,xc,yc,zc)&lt;abs(cspeed) and n&lt;256)
{
c += 0.00001*sign(cspeed)
if(c&gt;1){c=0}
if(c&lt;0){c=1}
n += 1

zc = (path_get_y(coaster_z,c)+ zoff)*zscl
xc = path_get_x(coaster_xy,c)*hscl
yc = path_get_y(coaster_xy,c)*hscl
}

cspeed += (zc-(path_get_y(coaster_z,c+0.001)+ zoff)*zscl)/10 - 0.05*sign(cspeed)
cspeed = max(cspeed,3*(c&lt;0.6))
cspeed = max(cspeed*(c&lt;0.9),4)

draw_circle_color(x+plane_x(xc,yc,global.VIEW_DIRECTION),y+plane_y(xc,yc,global.VIEW_DIRECTION)*ymod-zc*h,3,c_red,c_red,false)

draw_text(0,0,point_distance_3d(tx,ty,tz,xc,yc,zc))
draw_text(0,16,n)
draw_text(0,32,cspeed)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
