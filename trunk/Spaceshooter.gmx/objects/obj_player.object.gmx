<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Starting variables
image_xscale = obj_control.gamescale
image_yscale = obj_control.gamescale

playerhealth = 100
playershield = 100
maxspeed = 4
friction = 0.05
turretang = 0
canshoot = 1
trail_lastx = x
trail_lasty = y
shootlaser = 0
treadspeed = 0
treads=part_system_create();
shieldalpha = 0
shielddir = 0
shieldrecharging = 0
global.combo = 0
upgradecharge = 0

mainguns[1] = scr_main_single
mainguns[2] = scr_main_double
mainguns[3] = scr_main_fastsingle
mainguns[4] = scr_main_fastdouble
mainguns[5] = scr_main_triple
mainguns[6] = scr_main_fasttriple
mainguns[7] = scr_main_quad
mainguns_count = 7
maingun = 1
upgrade = 0
upgradecap = 300

dead = 0

turretx = x+lengthdir_x(48,image_angle)
turrety = y+lengthdir_y(48,image_angle)

global.playerrocketpart=part_system_create();
part_system_depth(global.playerrocketpart,1)
global.playerrockettype=part_type_create();
part_type_shape(global.playerrockettype,8);
part_type_size(global.playerrockettype,0.25,1,-0.05,0.01);
part_type_scale(global.playerrockettype,1,1);
part_type_orientation(global.playerrockettype,0,0,0,0,0);

part_type_speed(global.playerrockettype,5,7,-0.01,0);
part_type_gravity(global.playerrockettype,0,270);
part_type_color3(global.playerrockettype,6908365,9890270,16777215);
part_type_alpha3(global.playerrockettype,0.50,0.25,0);
part_type_blend(global.playerrockettype,1);
part_type_life(global.playerrockettype,5,10);

//Upgrade particle
global.upgrademain=part_system_create();

global.upgrade1=part_type_create();

global.upgradeburst=part_system_create();

global.upgradeburst1=part_type_create();

global.tankbarrelmain=part_system_create();

global.tankbarrel1=part_type_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Upgrade gun (init by bullet)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>maingun += 1
upgradecharge = 0
part_upgradeburst()
sound_play(snd_upgrade)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,obj_levelcomplete)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Recharge shield</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shieldrecharging = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshoot</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//move and shit

if(speed &gt; maxspeed){
    speed = maxspeed
}

if(obj_control.movingstick2 = true and point_distance(obj_control.cx2,obj_control.cy2,mouse_x+obj_control.dragmouseoffx2,mouse_y+obj_control.dragmouseoffy2)&gt;4 or keyboard_check(ord('W')) or keyboard_check(ord('A')) or keyboard_check(ord('S')) or keyboard_check(ord('D')) and dead == 0){
    //motion_add(rotate(direction,obj_control.viewdragdir2,32),0.5*(obj_control.viewdragdist2)/32)
    part_playerrocket(x+lengthdir_x(32,image_angle+180),y+lengthdir_y(32,image_angle+180))
    motion_add(obj_control.viewdragdir2,0.25*(obj_control.viewdragdist2)/32)
}


//look where you're going stupid
if(speed &gt; 0){
    image_angle = rotate(image_angle,direction,3)
    if(obj_control.movingstick1 = false and !keyboard_check(vk_up) and !keyboard_check(vk_down) and !keyboard_check(vk_left) and !keyboard_check(vk_right)){
        turretang = rotate(turretang,direction,3)
    }
    //Fix the 180 degree turn thing where it gets stuck
    if(image_angle == obj_control.viewdragdir2 + 180){
        image_angle += 10
        direction += 10
    }
}

//make the turret look where it should
if((obj_control.movingstick1 = true and point_distance(obj_control.cx,obj_control.cy,mouse_x+obj_control.dragmouseoffx,mouse_y+obj_control.dragmouseoffy)&gt;4) or keyboard_check(vk_up) or keyboard_check(vk_down) or keyboard_check(vk_left) or keyboard_check(vk_right)){
    turretang = rotate(turretang,obj_control.viewdragdir,8)
}

//Handle tank trails
if(point_distance(x+lengthdir_x(32,image_angle+180),y+lengthdir_y(32,image_angle+180),trail_lastx,trail_lasty)&gt;8){
    trail_lastx = x+lengthdir_x(32,image_angle+180)
    trail_lasty = y+lengthdir_y(32,image_angle+180)
}

//Tread speed
treadspeed += speed/10

//Shield effect
if(shieldalpha&gt;0){
    shieldalpha-=0.05
}
if(shieldrecharging == 1 and playershield &lt; 100 and dead = 0){
    part_shieldrecharge();
    playershield += 0.2
}

//Blow up
if(playerhealth &lt;= 0 and dead == 0){
    sound_play(snd_boom1)
    part_suicide_explosion()
    part_playerdeath1()
    x=room_width/2
    y=-1024
    alarm[2] = 180
    dead = 1
}

//Upgrade fx
if(upgradecharge == 1){
    part_upgradecharge()
}

if(x&lt;100){motion_add(0,(100-x)/90)}
if(y&lt;100){motion_add(270,(100-y)/90)}
if(x&gt;room_width-100){motion_add(180,(x-(room_width-100))/90)}
if(y&gt;room_height-100){motion_add(90,(y-(room_height-100))/90)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//motion_add(point_direction(x,y,other.x,other.y)+180,0.2)
move_contact_all(point_direction(x,y,other.x,other.y)+180,8)
speed = speed/2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//Draw treads
/*
draw_sprite_ext(spr_player_treads,treadspeed,    l_plane_x(38,35),   l_plane_y(38,35)     , image_xscale,image_yscale,direction,c_white,1)
draw_sprite_ext(spr_player_treads,treadspeed,    l_plane_x(38,-35),  l_plane_y(38,-35)    ,image_xscale,image_yscale,direction,c_white,1)
draw_sprite_ext(spr_player_treads,treadspeed,    l_plane_x(-24,35),  l_plane_y(-24,35)    ,image_xscale,image_yscale,direction,c_white,1)
draw_sprite_ext(spr_player_treads,treadspeed,    l_plane_x(-24,-35), l_plane_y(-24,-35)   ,image_xscale,image_yscale,direction,c_white,1)
*/

/*Draw laser pointer
draw_set_blend_mode(bm_add)
draw_set_alpha(0.8)
draw_line_width_color(x,y,x+lengthdir_x(256,turretang),y+lengthdir_y(256,turretang),2,c_aqua,c_black)
draw_set_alpha(1)
draw_set_blend_mode(bm_normal)
*/

turretx = x+lengthdir_x(48,image_angle)
turrety = y+lengthdir_y(48,image_angle)

//Draw the turret
draw_sprite_ext(spr_turret,0,turretx,turrety,image_xscale,image_yscale,turretang,c_white,1)

//Draw body
draw_self();

//Execute the firing script
if(dead == 0){
    script_execute(mainguns[maingun])
}

//Draw shield (only if hit)
if(shieldalpha &gt; 0){
    draw_sprite_ext(spr_shield,0,x,y,1,1,shielddir,c_white,shieldalpha)
}


//Tread trails
//draw_tanktracks();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
