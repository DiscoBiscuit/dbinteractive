<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_bullet_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale *= obj_control.gamescale
image_yscale *= obj_control.gamescale

//Bullet attributes
bdist = 512+random_range(-24,24)
image_xscale *= 0.8
image_yscale *= 0.8


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(point_distance(xstart,ystart,x,y)&gt;bdist){
    instance_destroy()
}

image_angle = direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(baddie == 0){

    if(other.buffed==0)
    {
    other.myhealth -= mydamage;
    obj_data.score_damagedone += mydamage //Add to score stuff
    obj_data.score_shotshit += 1
    other.healthbaralpha = 20
    other.redvalue = 120
    other.chunkflingdir = direction
    with(other){
        motion_add(point_direction(instance_nearest(x,y,obj_bullet).x,instance_nearest(x,y,obj_bullet).y,x,y),0.5)
        part_baddiechunk()
        if(myhealth&lt;=0){
            obj_control.alarm[0] = 180 //Alarm to reset combos
            global.combo += 1 //Add to current combo count
            global.combosize = 1 //Reset the size of the combo text
            if(global.combo &gt; 1){
                sound_play(snd_combo)
                global.comboposx = x
                global.comboposy = y
                part_combofx();
            }
            obj_data.score_kills += 1 //Add to score stuff
            instance_destroy();
            global.gamescore += myscore*global.combo
            obj_player.upgrade = min(obj_player.upgradecap,obj_player.upgrade+10)
                if(obj_player.upgrade==obj_player.upgradecap)
                {
                    if(obj_player.maingun&lt;obj_player.mainguns_count)
                    {
                        obj_player.upgrade = 0
                        obj_player.alarm[3] = 120
                        sound_play(snd_charge)
                        obj_player.upgradecap *= 1.6
                        obj_player.upgradecharge = 1
                    }
                }
        }
    }
    }
    else
    {
        other.buffed = 0
        other.canbuff = 0
        other.alarm[11] = 512
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(baddie == 1)
{
    playerdamage(mydamage)
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    draw_set_blend_mode(bm_add)
    draw_self()
    draw_set_blend_mode(bm_normal)
    
    /*
if(bullet_type = 1){
    draw_sprite_ext(spr_bullet_light,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
