<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Baddiespawningstuff
spawntime = 150
alarm[0] = spawntime

enemylist = ds_list_create()
addenemy = obj_light
ds_list_add(enemylist,addenemy)

wave = 0
alarm[2] = 300

nextwaveoffset = 0
seconds = 0
lastseconds = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//New wave begins

global.combat = 1
wave += 1

alarm[1] = 60*60

//sound when the next round timer flies back into the top bar
sound_play(snd_timer2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Wave ends

with(obj_enemy)
instance_destroy()

alarm[2] = 600

spawntime /= 1.1

global.combat = 0

//When we get to certain waves, more powerful enemies are added to the list of spawnable ones
//Each wave they are added, the current addenemy becomes more and more common
if(wave=2){addenemy=obj_charger}
if(wave=4){addenemy=obj_tank}
if(wave=6){addenemy=obj_buff}
if(wave=8){addenemy=obj_bomber}
if(wave=10){addenemy=obj_critz}
if(wave&gt;=12){addenemy=choose(obj_light,obj_charger,obj_tank,obj_bomber,obj_buff,obj_critz)}

ds_list_add(enemylist,addenemy)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Spawn in enemies

var randx, randy;
randx = choose(view_xview-random_range(64,128),view_xview+view_wport+random_range(64,128))
randy = choose(view_yview-view_hport-random_range(64,128),view_yview+random_range(64,128))

if(global.combat = 1 and instance_number(obj_enemy)&lt;min(24,6+wave*2) and place_free(randx,randy)){
    ds_list_shuffle(enemylist)
    instance_create(randx,randy,ds_list_find_value(enemylist,0))
}
alarm[0] = spawntime
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var timestring, secs, p1, p2;

draw_set_font(fnt_score)
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_white)

//smooths out the movement of the next wave timer text
nextwaveoffset = (nextwaveoffset*6 + (alarm[2]/60 &lt; 3.6 and alarm[2]/60 &gt; 0))/7
p1 = 1-nextwaveoffset
p2 = nextwaveoffset

if(alarm[1]&gt;0)
{
timestring = "Wave " + string(max(1,wave)) + " - "
seconds = ceil(alarm[1]/60)
timestring = timestring+string(floor(seconds/60))+":"
secs = (seconds%60)/100
if(secs=0)
timestring = timestring+"00"
else
timestring = timestring+string_copy(string(secs),3,2)
draw_text(view_xview+view_wview/(2.7*p1 + 2*p2),view_yview+(16*p1 + p2*view_hview/3),timestring)
}

if(alarm[2]&gt;0)
{
timestring = "Next wave - "
lastseconds = seconds
seconds = ceil(alarm[2]/60)

//this is what plays the sound when the second changes
if(seconds&lt;4 and seconds!=lastseconds)
sound_play(snd_timer1)

timestring = timestring+string(floor(seconds/60))+":"
secs = (seconds%60)/100
if(secs=0)
timestring = timestring+"00"
else
timestring = timestring+string_copy(string(secs),3,2)
draw_text(view_xview+view_wview/(2.7*p1 + 2*p2),view_yview+(16*p1 + p2*view_hview/3),timestring)
}
draw_set_valign(fa_top)
draw_set_halign(fa_left)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
