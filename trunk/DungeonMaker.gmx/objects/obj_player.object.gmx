<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_tdn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>iso_x = x-y;
iso_y = (x+y)/2;
iso_z = 1;
xspeed = 0;
yspeed = 0;
fric = 8;
xspeedmax = 8;
yspeedmax = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Isometric view
iso_x = x-y;
iso_y = (x+y)/2;
iso_z = 64;
if (drawmode == -1)
{
    depth = -y;
    depth += -x - 10;
}
else
{
    depth = 0;
}

//Apply friction
if not (analogcreated)
{
    xspeed = (xspeed*(fric-1))/fric;
    yspeed = (yspeed*(fric-1))/fric;
}
else if (analogpull &gt; 8)
{
    xspeed += (mouse_x - analogx) / (analoglength*4)
    yspeed += (mouse_y - analogy) / (analoglength*4)
}
var xdist,ydist;
xdist = min(point_distance(0,analogy,0,mouse_y),analoglength);
ydist = min(point_distance(0,analogy,0,mouse_y),analoglength);
//xspeed = clamp(xspeed,-xdist/8,xdist/8);
xspeed = clamp(xspeed,-xspeedmax,xspeedmax);
//yspeed = clamp(yspeed,-ydist/8,ydist/8);
yspeed = clamp(yspeed,-yspeedmax,yspeedmax);
x += xspeed;
y += yspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawmode == 1)
{
    sprite_index = spr_player_tdn;
    draw_self();
}
else
{
    sprite_index = spr_player;
    draw_sprite(sprite_index,image_index,iso_x,iso_y-iso_z);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
