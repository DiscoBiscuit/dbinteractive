<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_donut</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>block_color = choose(c_red,c_orange,c_yellow,c_green,c_blue,c_purple,c_white,c_aqua,make_color_rgb(255,180,180));
donut_type = choose(0,1,2,3,4,5,6)
special = choose(0,0,0,0,0,0,0,0,0,0,0,0,1)
//image_blend = block_color;
active = 1;
yspeed = 0
row = (x / 60) + 1;
left = instance_position(x-1,y,obj_block);
right = instance_position(x+sprite_width+1,y,obj_block);
up = instance_position(x,y-1,obj_block);
down = instance_position(x,y+sprite_height+1,obj_block);
selected = 0;
tx = x;
ty = y;
mx = 0;
my = 0;
dx = x
dy = y
depth = x-y
pull = 0
alarm[0] = 1
m4d = 0
donutsize = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_control.rowq[row] += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>check_links()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>check_links()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_empty(x,y + 1) and y + sprite_height &lt; room_height)
{
    active = 1;
}
else
{
    if(active == 1)
    {
        depth = x-y
        alarm[1] = 1
        active = 0;
    }
};

if (active == 1)
{
    dx = x
    dy = y
    yspeed = (yspeed * 19 + 10) / 20
}
else
{
    if not (place_snapped(60,64))
    {
        move_snap(60,64)
        dx = x
        dy = y
    };
    yspeed = 0;
};

y += yspeed;

/*
left = instance_place(x-sprite_width,y,obj_block);
right = instance_place(x+1,y,obj_block);
up = instance_place(x,y-1,obj_block);
down = instance_place(x,y+1,obj_block);

if (left.block_color == block_color and right.block_color == block_color and active == 0 and left.active == 0 and right.active == 0)
{
    with(left){
        instance_destroy();
    }
    with(right){
        instance_destroy();
    }
    with(self){
        instance_destroy();
    }
};

if (up.block_color == block_color and down.block_color == block_color and active == 0 and up.active == 0 and down.active == 0)
{
    with(up){
        instance_destroy();
    }
    with(down){
        instance_destroy();
    }
    with(self){
        instance_destroy();
    }
};
*/

if (dx != x)
{
    dx = (dx * 7 + x) / 8
};
if (dy != y)
{
    dy = (dy * 7 + y) / 8
};

if(m4d == 1){
    donutsize -= 0.033
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(selected == 1 and active == 0)
{
switchdir = round(point_direction(mx,my,mouse_x,mouse_y)/90) mod 4;
if (switchdir == 1 and up)
{
    if (up.active == 0)
    {
    tx = up.x
    ty = up.y
    up.x = x
    up.y = y
    x = tx
    y = ty
    row = (x / 60) + 1;
    up.row = (up.x / 60) + 1;
    }
};
if (switchdir == 0 and right)
{
    if (right.active == 0)
    {
    tx = right.x
    ty = right.y
    right.x = x
    right.y = y
    x = tx
    y = ty
    row = (x / 60) + 1;
    right.row = (right.x / 60) + 1;
    }
};
if (switchdir == 2 and left)
{
    if (left.active == 0)
    {
    tx = left.x
    ty = left.y
    left.x = x
    left.y = y
    x = tx
    y = ty
    row = (x / 60) + 1;
    left.row = (left.x / 60) + 1;
    }
};
if (switchdir == 3 and down)
{
    if (down.active == 0)
    {
    tx = down.x
    ty = down.y
    down.x = x
    down.y = y
    x = tx
    y = ty
    row = (x / 60) + 1;
    down.row = (down.x / 60) + 1;
    }
};
};
alarm[0] = 1
selected = 0;
depth = x-y
check_links();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mx = mouse_x;
my = mouse_y;
selected = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,donut_type,dx,dy,donutsize,donutsize,image_angle,image_blend,image_alpha)
left = instance_place(x-sprite_width,y,obj_block);
right = instance_place(x+1,y,obj_block);
up = instance_place(x,y-1,obj_block);
down = instance_place(x,y+1,obj_block);
if (special == 1)
{
    draw_sprite_ext(spr_sprinkles,0,dx,dy,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
};


/*if (right.block_color == block_color and active == 0 and right.active = 0)
{
    draw_sprite_ext(spr_connect,0,x,y,1,1,0,image_blend,1)
};
if (up.block_color == block_color and active == 0 and up.active = 0)
{
    draw_sprite_ext(spr_connect_up,0,x,y,1,1,0,image_blend,1)
};
*/
draw_text(x,y,row)
draw_text(x,y+16,pull)
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
