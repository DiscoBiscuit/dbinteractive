<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hook</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir = point_direction(x,y,mouse_x,mouse_y);
phy_fixed_rotation = true;
phy_rotation = -dir
physics_apply_impulse(x,y,lengthdir_x(0.33,dir),lengthdir_y(0.33,dir));
hooked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dir = point_direction(phy_position_x,phy_position_y,phy_position_x+phy_speed_x,phy_position_y+phy_speed_y);
if not hooked
{
    phy_rotation = scr_rotate(phy_rotation,-dir,16);
    if distance_to_object(obj_player) &gt; 720
    {
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collision_mask">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create rope physics
var dist = point_distance(self.x,self.y,other.x,other.y);
attach = physics_joint_weld_create(self,other,x,y,phy_rotation,10,1,false);
hooked = true;
obj_player.hooked = true;
obj_player.roperetractnum = 0;
//create rope
var number = point_distance(x,y,obj_player.x,obj_player.y)/70;
var count = 0;
next_rope = instance_create(x,y,obj_rope);
ds_list_add(ropearray,next_rope.id);
attachrope = physics_joint_distance_create(self,next_rope,self.x,self.y,next_rope.x,next_rope.y,false);
with next_rope
{
    parent = other.id;
}
repeat number
{
    count += 1;
    last_rope = next_rope;
    var len,dir
    len = point_distance(x,y,obj_player.x,obj_player.y);
    dir = point_direction(x,y,obj_player.x,obj_player.y);
    next_rope = instance_create(x+lengthdir_x((len/number)*count,dir),y+lengthdir_y((len/number)*count,dir),obj_rope);
    ds_list_add(ropearray,next_rope.id);
    with next_rope
    {
        parent = obj_hook.last_rope
        var dir2 = point_direction(x,y,parent.x,parent.y);
        phy_rotation = -dir2+90;
    }
    link = physics_joint_distance_create(last_rope,next_rope,last_rope.x,last_rope.y,next_rope.x,next_rope.y,false);
}
attachtoplayer = physics_joint_distance_create(obj_player,next_rope,obj_player.x,obj_player.y-32,next_rope.x,next_rope.y,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not hooked
{
    draw_set_color(c_dkgray);
    draw_line_width(x,y,obj_player.x,obj_player.y,4);
}
draw_self();
if hooked and instance_exists(next_rope)
{
    draw_line_width(next_rope.x,next_rope.y,obj_player.x,obj_player.y,4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,18</point>
    <point>7,18</point>
  </PhysicsShapePoints>
</object>
