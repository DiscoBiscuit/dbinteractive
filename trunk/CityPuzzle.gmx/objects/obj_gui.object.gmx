<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nearnode = noone
cranenode = noone
nextbuild = "none"
nextlevel = 0
nextlevelupgrade = 0
takespc = -1

view_xview = room_width/2 - view_wview/2
view_yview = room_height/2 - view_hview/2
viewdrag_x = 0
viewdrag_y = 0
viewdrag_mouse_x = view_xview
viewdrag_mouse_y = view_yview
viewdest_x = view_xview
viewdest_y = view_yview
viewdrag = false
craning = false

production = 0
energy = 0

inventory = ds_list_create()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ok, so this is everything to make the GUI as it currently stands. It may look like a lot, but its really simple.
//Most of the hard work is done behind the scenes. This is just the design


//Creats a new gui space
gui_new( id )

var bh;
bh = 1920

//This window is the scrollable sidebar
buildwindow = gui_window_new( id , view_wview-48 , bh/2, 96 , bh )
gui_window_color( buildwindow , c_ltgray , c_black)
gui_window_properties( buildwindow , false, false, false )
//It has its own variable that helps it smooth the motion
buildwindow.desty = bh/2

//This button is what lets you scroll the build window. It covers the whole thing.
button_buildscroll = gui_dragbutton_new( buildwindow, 0,0,96,bh,spr_empty,90,30,true,func_none)
gui_button_clickfunc( button_buildscroll, func_setdragfuncenable, true)
gui_dragbutton_dragfunc( button_buildscroll, func_buildscroll)

var new;
for(i=0;i&lt;20;i+=1)
{
new = gui_dragbutton_new( buildwindow, 0,-bh/2 + 48 +i*96,96,96,spr_empty,180,60,false,func_setnextbuild)
new.building = "none"
new.level = 0
new.spc = i
new.func_draw = func_invspc_draw
new.c_spcback = c_white
if(i&lt;3){new.c_spcback = make_color_rgb(200,255,200)}
ds_list_add(inventory,new)
}

inventory_add("house",1)
inventory_add("factory",1)
inventory_add("energy",1)
inventory_add("house",1)
inventory_add("crane",1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buildwindow.ty = (buildwindow.ty*9 + buildwindow.desty )/10

view_xview = (view_xview*7 + viewdest_x)/8
view_yview = (view_yview*7 + viewdest_y)/8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(viewdrag==true and craning==true and !nearnode)
{
viewdrag = false
return 0
}

//craning = false
if(craning and cranenode==nearnode)
{
    node_build(cranenode,nextbuild,nextlevel)
    cranenode = noone
    inventory_insert("crane",1,takespc)
    craning = false
}
else
{
if(nearnode!=noone and nextlevelupgrade&gt;0 and gui_world_canclick(id))
{
    if(nextbuild=="crane")
    {
        obj_node_buildghost.sprite_index = nearnode.sprite_index
        obj_node_buildghost.craning = true
        nextbuild = nearnode.building
        nextlevel = nearnode.level
        nextlevelupgrade = nearnode.level
        cranenode = nearnode
        node_build(nearnode,"none",0)
        resource_update()
        craning = true
    }
    else
    {
        craning = false
        node_build(nearnode, nextbuild, nextlevelupgrade)
        with(obj_node)
        {
            if(pull==true)
            {
            var new;
            new = instance_create(x,y,obj_node_upgradeghost)
                new.destx = obj_gui.nearnode.x
                new.desty = obj_gui.nearnode.y
                new.sprite_index = sprite_index
            node_build(id,"none",0)
            pull=false
            }
        }
        resource_update()
        if(nextlevel==nextlevelupgrade){sound_play(snd_build)}else{sound_play(snd_upgrade)}
        
    var randint,randlev;
    randint = round(random(1000))
    randlev = 1
    if(randint&lt;100){randlev=2}
    if(randint&lt;10){randlev=3}
    if(randint==1){randlev=4}
    if(takespc==0){inventory_insert("house",randlev,0)}
    if(takespc==1){inventory_insert("factory",randlev,1)}
    if(takespc==2){inventory_insert("energy",randlev,2)}
    
    }
}
else
{
    if(craning)
    {
        node_build(cranenode,nextbuild,nextlevel)
        cranenode = noone
        inventory_insert("crane",1,takespc)
        craning = false
    }
    else
    {
        inventory_insert(nextbuild,nextlevel,takespc)
    }
}
}

if(!craning)
{
nearnode = noone
nextbuild = "none"
nextlevel = 0
nextlevelupgrade = 0
takespc = -1
with(obj_node_buildghost){instance_destroy()}
with(obj_node){pull=false}
}

viewdrag = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gui_world_canclick(obj_gui) and (nextbuild=="none" or craning==true) and !nearnode)
{
    viewdrag = true
    viewdrag_x = round(mouse_x-view_xview)
    viewdrag_y = round(mouse_y-view_yview)
    viewdrag_mouse_x = view_xview
    viewdrag_mouse_y = view_yview
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var new,cont,up,shouldwork;
new = instance_nearest(mouse_x,mouse_y,obj_node)
cont = true

shouldwork = false
if(nextbuild!="crane" and new.building=="none"){shouldwork = true}
if(nextbuild=="crane" and new.building!="none"){shouldwork = true}

if(point_distance_ext(mouse_x,mouse_y,new.x,new.y,1,0.58) &lt; 48 and shouldwork and nextlevelupgrade&gt;=1)
{
    if(nearnode!=new)
    {
        with(obj_node)
        {
            pull = false
        }
        nearnode = new
        
        while(cont==true)
        {
            up = simulate_upgrade(nearnode,nextbuild,nextlevelupgrade)
            if(up==nextlevelupgrade){cont=false}
            nextlevelupgrade = up
            obj_node_buildghost.sprite_index = ds_list_find_value(ds_map_find_value(buildings.sprite,nextbuild),nextlevelupgrade)
        }
    }
    if(instance_exists(obj_node_buildghost))
    {
    obj_node_buildghost.x = lerp(obj_node_buildghost.x,nearnode.x,0.5)
    obj_node_buildghost.y = lerp(obj_node_buildghost.y,nearnode.y,0.5)
    }
}
else
{
    nearnode = noone
    nextlevelupgrade = nextlevel
    obj_node_buildghost.sprite_index = ds_list_find_value(ds_map_find_value(buildings.sprite,nextbuild),nextlevel)
    with(obj_node)
    {
        pull = false
    }
    if(instance_exists(obj_node_buildghost))
    {
    obj_node_buildghost.x = lerp(obj_node_buildghost.x,mouse_x,0.5)
    obj_node_buildghost.y = lerp(obj_node_buildghost.y,mouse_y,0.5)
    }
}

if(viewdrag==true)
{
    viewdest_x = clamp( viewdrag_mouse_x + round(viewdrag_x-(mouse_x-view_xview)) , 0,room_width-view_wview)
    viewdest_y = clamp( viewdrag_mouse_y + round(viewdrag_y-(mouse_y-view_yview)) , 0,room_height-view_hview)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left)
draw_set_valign(fa_top)
draw_set_color(c_white)
draw_text(view_xview,view_yview,"Production: " + string(production) + " / Energy: " + string(energy))

gui_draw( id )
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inventory_add("crane",1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
