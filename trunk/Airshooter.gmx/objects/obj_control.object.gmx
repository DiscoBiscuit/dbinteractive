<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamescale = 0.8;

instance_create(room_width/2,room_height/2,obj_player)
instance_create(0,0,obj_pause)
instance_create(0,0,obj_spawner)

with(obj_player){
    instance_create(x,y,obj_camera)
}
//Starting variables
global.gamescore = 0
global.stringgamescore = string(global.gamescore)
global.combat = 0 //0 = not a combat room, 1 = is a combat room, should be declared in room creation if 0

//Reset score stuff
obj_data.score_kills = 0
obj_data.score_damagedone = 0
obj_data.score_damagetaken = 0
obj_data.score_shotsfired = 0
obj_data.score_shotshit = 0
obj_data.score_hitpercentage = 0

//Joystick stuff
//----
//Are you currently dragging the view?
movingstick1 = false
movingstick2 = false
//Determine what finger is moving what
lstick0 = false
lstick1 = false
rstick0 = false
rstick1 = false
cx = 0
cy = 0

//the direction and distance you are dragging the view every frame
viewdragdir = 0
viewdragdist = 0
viewdragdir2 = 0
viewdragdist2 = 0

//offsets which store where you initially clicked the drag joystick. Having these offsets allows you to grab the
//stick anywhere on it and still have it not freak out
dragmouseoffx = 0
dragmouseoffy = 0
dragmouseoffx2 = 0
dragmouseoffy2 = 0

//just need to init these before we use them, and it might as well be done here
global.xrdX = 0
global.xrdY = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Combo Breaker (HUEHUE)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.combo = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Moves the view drag speed back to zero over time, smoothing it out
if(viewdragdist &gt; 2){
    viewdragdist = viewdragdist/1.1
}
else{
    viewdragdist = 0
}

if(viewdragdist2 &gt; 2){
    viewdragdist2 = viewdragdist2/1.1
}
else{
    viewdragdist2 = 0
}

//if we are dragging the view...
if(movingstick1=true and !keyboard_check(vk_left) and !keyboard_check(vk_right) and !keyboard_check(vk_up) and !keyboard_check(vk_down))
{
    //cx and cy are the coordinates for the center of the joystick
    cx = view_xview+view_wview-64
    cy = view_yview+view_hview-64
        
    //we get the distance the joystick has been moved from its resting spot, accounting for any offsets
    if(rstick0 == true){
        viewdragdir = point_direction(cx,cy,YoYo_MouseX(0)+dragmouseoffx,YoYo_MouseY(0)+dragmouseoffy)
        viewdragdist = min(32,point_distance(cx,cy,YoYo_MouseX(0)+dragmouseoffx,YoYo_MouseY(0)+dragmouseoffy))
    }
    if(rstick1 == true){
        viewdragdir = point_direction(cx,cy,YoYo_MouseX(1)+dragmouseoffx,YoYo_MouseY(1)+dragmouseoffy)
        viewdragdist = min(32,point_distance(cx,cy,YoYo_MouseX(1)+dragmouseoffx,YoYo_MouseY(1)+dragmouseoffy))
    }
}

//TEMPORARY!!!!!!!!!!!! Control the left stick with WASD for PC testing
if(keyboard_check(ord('W'))){
    viewdragdir2 += 4
    viewdragdir2 = rotate(viewdragdir2,90,32)
    viewdragdist2 = 32
}
if(keyboard_check(ord('S'))){
    viewdragdir2 += 4
    viewdragdir2 = rotate(viewdragdir2,270,32)
    viewdragdist2 = 32
}
if(keyboard_check(ord('A'))){
    viewdragdir2 += 4
    viewdragdir2 = rotate(viewdragdir2,180,32)
    viewdragdist2 = 32
}
if(keyboard_check(ord('D'))){
    viewdragdir2 += 4
    viewdragdir2 = rotate(viewdragdir2,0,32)
    viewdragdist2 = 32
}

//TEMPORARY!!!!!!!!!!!! Control the right stick with Arrow Keys for PC testing
if(keyboard_check(vk_up)){
    viewdragdir += 4
    viewdragdir = rotate(viewdragdir,90,32)
    viewdragdist = 32
}
if(keyboard_check(vk_down)){
    viewdragdir += 4
    viewdragdir = rotate(viewdragdir,270,32)
    viewdragdist = 32
}
if(keyboard_check(vk_left)){
    viewdragdir += 4
    viewdragdir = rotate(viewdragdir,180,32)
    viewdragdist = 32
}
if(keyboard_check(vk_right)){
    viewdragdir += 4
    viewdragdir = rotate(viewdragdir,0,32)
    viewdragdist = 32
}

if(movingstick2=true and !keyboard_check(ord('W')) and !keyboard_check(ord('A')) and !keyboard_check(ord('S')) and !keyboard_check(ord('D')))
{
    //cx and cy are the coordinates for the center of the joystick
    cx2 = view_xview+64
    cy2 = view_yview+view_hview-64
    
    //we get the distance the joystick has been moved from its resting spot, accounting for any offsets
    if(lstick0 == true){
        viewdragdir2 = point_direction(cx2,cy2,YoYo_MouseX(0)+dragmouseoffx2,YoYo_MouseY(0)+dragmouseoffy2)
        viewdragdist2 = min(32,point_distance(cx2,cy2,YoYo_MouseX(0)+dragmouseoffx2,YoYo_MouseY(0)+dragmouseoffy2))
    }
    if(lstick1 == true){
        viewdragdir2 = point_direction(cx2,cy2,YoYo_MouseX(1)+dragmouseoffx2,YoYo_MouseY(1)+dragmouseoffy2)
        viewdragdist2 = min(32,point_distance(cx2,cy2,YoYo_MouseX(1)+dragmouseoffx2,YoYo_MouseY(1)+dragmouseoffy2))
    }
}

//move the view in the direction and speed we want, but keep it inside the room
//view_xview = clamp(view_xview+lengthdir_x(viewdragdist/2,viewdragdir),0,room_width-view_wview)
//view_yview = clamp(view_yview+lengthdir_y(viewdragdist/2,viewdragdir),0,room_height-view_hview)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Was in the mouse event</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(YoYo_MouseCheckButtonPressed(0,mb_left) or YoYo_MouseCheckButtonPressed(1,mb_left)){

//--- Rightside Joystick

//referencing the position of the joystick's center
cx = view_xview+view_wview-64
cy = view_yview+view_hview-64
//if we clicked somewhere within the circle of the joystick...
if(point_distance(YoYo_MouseX(0),YoYo_MouseY(0),cx,cy)&lt;32)
{
//we say the view is being dragged...
movingstick1 = true
rstick0 = true
//and we store how far off the center of the joystick you actually clicked
dragmouseoffx = cx-YoYo_MouseX(0)
dragmouseoffy = cy-YoYo_MouseY(0)
}

if(point_distance(YoYo_MouseX(1),YoYo_MouseY(1),cx,cy)&lt;32)
{
//we say the view is being dragged...
movingstick1 = true
rstick1 = true
//and we store how far off the center of the joystick you actually clicked
dragmouseoffx = cx-YoYo_MouseX(1)
dragmouseoffy = cy-YoYo_MouseY(1)
}


//---- Leftside Joystick

//referencing the position of JOI SUCK 2
cx2 = view_xview+64
cy2 = view_yview+view_hview-64
//LEFT STICK
if(point_distance(YoYo_MouseX(0),YoYo_MouseY(0),cx2,cy2)&lt;32)
{
//we say the view is being dragged...
movingstick2 = true
lstick0 = true
//and we store how far off the center of the joystick you actually clicked
dragmouseoffx2 = cx2-mouse_x
dragmouseoffy2 = cy2-mouse_y
}

if(point_distance(YoYo_MouseX(1),YoYo_MouseY(1),cx2,cy2)&lt;32)
{
//we say the view is being dragged...
movingstick2 = true
lstick1 = true
//and we store how far off the center of the joystick you actually clicked
dragmouseoffx2 = cx2-YoYo_MouseX(1)
dragmouseoffy2 = cy2-YoYo_MouseY(1)
}

}
if not(YoYo_MouseCheckButton(0,mb_left)){
    if(lstick0 == true){
        movingstick2 = false
    }
    if(rstick0 == true){
        movingstick1 = false
    }
    lstick0 = false
    rstick0 = false
}
if not(YoYo_MouseCheckButton(1,mb_left)){
    if(lstick1 == true){
        movingstick2 = false
    }
    if(rstick1 == true){
        movingstick1 = false
    }
    lstick1 = false
    rstick1 = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(mouse_x,mouse_y,obj_sniper)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw the overlay
//draw_sprite(spr_overlay,0,view_xview,view_yview)

//referencing the center of the joystick again
cx = view_xview+view_wview-64
cy = view_yview+view_hview-64
//we draw the outline circle, which never moves
draw_circle_color(cx,cy,24,c_dkgray,c_gray,0)
//and we also draw the stick itself, which is moved to where your mouse is aiming
//draw_circle_color(cx+lengthdir_x(viewdragdist,viewdragdir),cy+lengthdir_y(viewdragdist,viewdragdir),32,c_white,c_blue,false)
draw_sprite(spr_analog,0,cx+lengthdir_x(viewdragdist,viewdragdir),cy+lengthdir_y(viewdragdist,viewdragdir))

//LEFT JOYSTICK
cx2 = view_xview+64
cy2 = view_yview+view_hview-64
//we draw the outline circle, which never moves
draw_circle_color(cx2,cy2,24,c_dkgray,c_gray,0)
//and we also draw the stick itself, which is moved to where your mouse is aiming
//draw_circle_color(cx2+lengthdir_x(viewdragdist2,viewdragdir2),cy2+lengthdir_y(viewdragdist2,viewdragdir2),32,c_white,c_blue,false)
draw_sprite(spr_analog,0,cx2+lengthdir_x(viewdragdist2,viewdragdir2),cy2+lengthdir_y(viewdragdist2,viewdragdir2))


draw_scoreboard();

draw_sidearrows();

//Draw health &amp; shield
draw_set_alpha(0.8)
draw_sprite_ext(spr_shieldbar,0,view_xview+view_wview-264,view_yview-2,1,1,0,c_black,0.8)
draw_sprite_part(spr_shieldbar,0,264,0,-obj_player.playershield*2.64,32,view_xview+view_wview,view_yview-2)
draw_sprite_ext(spr_healthbar,0,view_xview+view_wview-256,view_yview-1.25,1,1.2,0,c_black,0.8)
draw_sprite_part(spr_healthbar,0,256,0,-obj_player.playerhealth*2.56,32,view_xview+view_wview,view_yview)
draw_set_alpha(1)

//Draw combo amount
if(global.combo&gt;1){
    draw_text(view_xview,view_yview+40,"Combo x"+string(global.combo)+"!")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,obj_levelcomplete)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>This is the back button on Android</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
