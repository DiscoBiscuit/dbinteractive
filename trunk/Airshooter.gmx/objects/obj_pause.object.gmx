<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>msg = 0
userwidth = window_get_width()/view_wport
userheight = window_get_height()/view_hport
paused = 0
pausepanely = view_yview+view_hview
pausesprite = 0
open = 0
closing = 0
pausealpha = 0
question_menu = 0
question_endgame = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Did the user touch the pause tab (multi-touch compatible)

if(YoYo_MouseCheckButtonPressed(0,mb_left) or YoYo_MouseCheckButtonPressed(1,mb_left) and paused == 0 and closing == 0){
    if((mouse_x&gt;view_xview+view_wview/2-45 and mouse_x&lt;view_xview+view_wview/2+45 and mouse_y&gt;view_yview+view_hview-28 and mouse_y&lt;view_yview+view_hview)){
        //Create a screenshot of the screen to mimic everything freezing on the pause menu since deactivate all stop drawing as well
        pausesprite = sprite_create_from_screen(0,0,view_wview*userwidth,view_hview*userheight,0,0,0,0)
        instance_deactivate_all(true)
        paused = 1
    }
}

//Slide up the pause menu
if(paused == 0 and closing == 0){
    pausepanely = view_yview+view_hview
    open = 0
    pausealpha = 0
}
if(paused == 1 and pausepanely &gt; view_yview){
    pausepanely = (pausepanely*9 + view_yview-8)/10
    open = 0
}
else{
    open = 1
}
if(open == 1 and pausealpha &lt; 0.75){
    pausealpha += 0.075
}


//Close up
if(closing == 1 and paused == 0 and pausepanely &lt; view_yview+view_hview){
    pausepanely = (pausepanely*9 + view_yview+view_hview+8)/10
}

if(closing == 1 and paused == 0 and pausepanely &gt; view_yview+view_hview-2){
    instance_activate_all()
    closing = 0
}

//Are you sure? for menu &amp; exit buttons on pause menu

//Pressed the menu button
if(paused == 1 and mouse_check_button(mb_left) and mouse_x&gt;view_xview+view_wview/2-100 and mouse_x&lt;view_xview+view_wview/2+100
and mouse_y&gt;view_yview+180 and mouse_y&lt;view_yview+255){
    question_menu = 1
    msg = show_question_async("Return to the main menu?")
}

//Exit button
if(paused == 1 and mouse_check_button(mb_left) and mouse_x&gt;view_xview+view_wview/2-100 and mouse_x&lt;view_xview+view_wview/2+100
and mouse_y&gt;view_yview+260 and mouse_y&lt;view_yview+335){
    question_endgame = 1
    msg = show_question_async("Are you sure you wish to exit?")
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

//Pressed the exit button



//Pressed the back button

if(paused == 1 and mouse_x&gt;view_xview+32 and mouse_x&lt;view_xview+107
and mouse_y&gt;view_yview+260 and mouse_y&lt;view_yview+335){
    closing = 1
    paused = 0
}

/*
draw_sprite(spr_backbutton,0,view_xview+32,view_yview+260)
*/

/*
draw_sprite(spr_savebutton,0,view_xview+view_wview/2,view_yview+100)
draw_sprite(spr_menubutton,0,view_xview+view_wview/2,view_yview+180)
draw_sprite(spr_exitbutton,0,view_xview+view_wview/2,view_yview+260)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_d;
i_d = ds_map_find_value(async_load, "id");
if i_d == msg{
    if ds_map_find_value(async_load, "status") = true{
        if(question_menu == 1){
            room_goto(rm_menu)
        }
        if(question_endgame == 1){
        game_end();
        }
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.65)
if(paused == 1){
    draw_sprite(spr_pausenub,0,view_xview+view_wview/2,pausepanely)
}
else{
    draw_sprite(spr_pausenub,0,view_xview+view_wview/2,view_yview+view_hview)
}
if(paused == 1 or closing == 1){
    draw_sprite_ext(pausesprite,0,view_xview,view_yview,1/userwidth,1/userheight,0,c_white,1)
    draw_rectangle_color(view_xview,view_yview+view_hview,view_xview+view_wview,pausepanely-5,make_color_rgb(0,148,255),make_color_rgb(0,148,255),make_color_rgb(0,148,255),make_color_rgb(0,148,255),0)
    if(open == 1 and closing = 0){
        draw_set_alpha(pausealpha)
        draw_sprite(spr_paused,0,view_xview+view_wview/2,view_yview+32)
        draw_sprite(spr_savebutton,0,view_xview+view_wview/2,view_yview+100)
        draw_sprite(spr_menubutton,0,view_xview+view_wview/2,view_yview+180)
        draw_sprite(spr_exitbutton,0,view_xview+view_wview/2,view_yview+260)
        draw_sprite(spr_backbutton,0,view_xview+32,view_yview+260)
    }
}
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(paused == 1){
    closing = 1
    paused = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
