<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = obj_control.gamescale
image_yscale = obj_control.gamescale

//Bullet attributes
baddie = 0
bspeed = 15
bdist = 512+random_range(-24,24)
image_xscale = 0.25
image_yscale = 0.25
/*
bullet type
0 - tank shell
1 - regular bullet
*/
bullet_type = 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(point_distance(xstart,ystart,x,y)&gt;bdist){
    instance_destroy()
}

image_angle = direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(baddie == 0){
    other.myhealth -= 20;
    obj_data.score_damagedone += 20 //Add to score stuff
    obj_data.score_shotshit += 1
    other.healthbaralpha = 20
    other.redvalue = 120
    other.chunkflingdir = direction
    with(other){
        motion_add(point_direction(instance_nearest(x,y,obj_bullet).x,instance_nearest(x,y,obj_bullet).y,x,y),0.5)
        part_baddiechunk()
        if(myhealth&lt;=0){
            obj_control.alarm[0] = 180 //Alarm to reset combos
            global.combo += 1 //Add to current combo count
            obj_data.score_kills += 1 //Add to score stuff
            instance_destroy();
        }
    }
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(baddie == 1){
    if(bullet_type = 0){
        if(other.playershield &gt; 0){
            other.playershield -= 10
            obj_data.score_damagetaken += 10 //Score stuffs
            other.shieldalpha = 1
            other.shielddir = point_direction(other.x,other.y,x,y)
            sound_play(snd_shieldimpact)
        }
        else{
            other.playerhealth -= 5;
            obj_data.score_damagetaken += 5 //Score stuffs
            obj_camera.screenshake = min(obj_camera.screenshake+5,25)
        }
    }
    if(bullet_type = 1){
        if(other.playershield &gt; 0){
            other.playershield -= 2
            other.shieldalpha = 1
            other.shielddir = point_direction(other.x,other.y,x,y)
            sound_play(snd_shieldimpact)
        }
        else{
            other.playerhealth -= 1;
            obj_camera.screenshake = min(obj_camera.screenshake+2,4)
        }
    }
    other.shieldrecharging = 0
    other.alarm[1] = 120 //Shield recharge delay
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(bullet_type = 0){
    draw_set_blend_mode(bm_add)
    draw_self()
    draw_set_blend_mode(bm_normal)
}
if(bullet_type = 1){
    draw_sprite_ext(spr_bullet_light,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
