<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create a screenshot of the screen to mimic everything freezing since deactivate all stops drawing as well
userwidth = window_get_width()/view_wport
userheight = window_get_height()/view_hport
pausesprite = sprite_create_from_screen(0,0,view_wview*userwidth,view_hview*userheight,0,0,0,0)

//Yoink the variables from obj_data since it gets deactivated
score_kills = obj_data.score_kills
score_damagedone = obj_data.score_damagedone
score_damagetaken = obj_data.score_damagetaken
score_shotsfired = obj_data.score_shotsfired
score_shotshit = obj_data.score_shotshit
score_hitpercentage = obj_data.score_hitpercentage
instance_deactivate_all(true)

drawsign = 0
alarm[0] = 80
signi = 0
bounce = 0
boxalpha = 0
leftpanelx = 0
rightpanelx = room_width

//Star count stuff

if(global.gamescore &gt; 250){
    starcount = 4
}
else{
    if(global.gamescore &gt; 200){
        starcount = 3
    }
    else{
        if(global.gamescore &gt; 150){
            starcount = 2
        }
        else{
            starcount = 1
        }
    }
}


drawstars = 0
starnum = 0
starscale1 = 5
staralpha1 = 0
stary1 = 0
starscale2 = 5
staralpha2 = 0
stary2 = 0
starscale3 = 5
staralpha3 = 0
stary3 = 0
starscale4 = 5
staralpha4 = 0
stary4 = 0

starmessage[0] = "You tried"
starmessage[1] = "Not bad"
starmessage[2] = "Excellent"
starmessage[3] = "Perfect"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawsign = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(boxalpha &lt; 0.9){
    boxalpha += 0.0125
}

if(drawsign == 1){
if(signi&lt;6 and bounce == 0){
    signi += 0.4
}
if(signi &gt;= 6){
    bounce = 1
}
if(bounce = 1 and signi&gt;4){
    signi -= 0.4
}
}

//Extend left panel to middle of screen sort of
if(drawsign == 1 and leftpanelx &lt; view_wview/2-64){
    leftpanelx = (leftpanelx*9 + view_wview/2-64)/10
}
if(drawsign == 1 and rightpanelx &gt; view_wview/2+64){
    rightpanelx = (rightpanelx*9 + view_wview/2+64)/10
}
if(rightpanelx &lt;= view_wview/2+64.1){
    drawstars = 1
}

//Click the exit buttons on the menu
//    draw_sprite(spr_savebutton,0,view_xview+leftpanelx-128,view_yview+150)
//    draw_sprite(spr_menubutton,0,view_xview+leftpanelx-128,view_yview+250)
if(mouse_check_button(mb_left) and mouse_x&gt;view_xview+leftpanelx-228 and mouse_x&lt;view_xview+leftpanelx-28
and mouse_y &gt; view_yview+150 and mouse_y &lt; view_yview+150+75){
    show_message_async("(Placeholder) Saved the game (Not really lmao)")
}

if(mouse_check_button(mb_left) and mouse_x&gt;view_xview+leftpanelx-228 and mouse_x&lt;view_xview+leftpanelx-28
and mouse_y &gt; view_yview+250 and mouse_y &lt; view_yview+250+75){
    room_goto(rm_menu)
}

//Stars
if(drawstars == 1){
    if(starnum == 0){
        if(starscale1 &gt; 1){
            starscale1 -= 0.2
        }
        if(staralpha1 &lt; 1){
            staralpha1 += 0.05
        }
        if(stary1 &lt; 90){
            stary1 += 3.85
        }
        else{
            part_starsmoke(view_xview+view_wview/2-111,view_yview+stary1)
            if(starcount&gt;=1){
                starnum += 1
            }
        }
    }
    if(starnum == 1 and starcount &gt; 1){
        if(starscale2 &gt; 1){
            starscale2 -= 0.2
        }
        if(staralpha2 &lt; 1){
            staralpha2 += 0.05
        }
        if(stary2 &lt; 90){
            stary2 += 3.85
        }
        else{
            part_starsmoke(view_xview+view_wview/2-39.5,view_yview+stary2)
            if(starcount&gt;=2){
                starnum += 1
            }
        }
    }
    if(starnum == 2 and starcount &gt; 2){
        if(starscale3 &gt; 1){
            starscale3 -= 0.2
        }
        if(staralpha3 &lt; 1){
            staralpha3 += 0.05
        }
        if(stary3 &lt; 90){
            stary3 += 3.85
        }
        else{
            part_starsmoke(view_xview+view_wview/2+32,view_yview+stary3)
            if(starcount&gt;=3){
                starnum += 1
            }
        }
    }
    if(starnum == 3 and starcount &gt; 3){
        if(starscale4 &gt; 1){
            starscale4 -= 0.2
        }
        if(staralpha4 &lt; 1){
            staralpha4 += 0.05
        }
        if(stary4 &lt; 90){
            stary4 += 3.85
        }
        else{
            part_starsmoke(view_xview+view_wview/2+103.5,view_yview+stary4)
            starnum += 1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(pausesprite,0,view_xview,view_yview,1/userwidth,1/userheight,0,c_white,1)
draw_set_alpha(boxalpha)
draw_rectangle_color(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,0)
draw_set_alpha(1)
if(drawsign == 1){
    //Draw level complete thing
    draw_sprite(spr_lvlcomplete,signi,view_xview+view_wview/2,view_yview+32)
    //Draw the left score box
    coolblue = make_color_rgb(0,148,255)
    draw_set_alpha(0.75)
    draw_rectangle_color(view_xview,view_yview+128,view_xview+leftpanelx,view_yview+view_hview,coolblue,coolblue,coolblue,coolblue,0)
    draw_triangle_color(view_xview+leftpanelx+1,view_yview+128,view_xview+leftpanelx+1,view_yview+view_hview,view_xview+leftpanelx+64,view_yview+view_hview,coolblue,coolblue,coolblue,0)
    draw_sprite(spr_savebutton,0,view_xview+leftpanelx-128,view_yview+150)
    draw_sprite(spr_menubutton,0,view_xview+leftpanelx-128,view_yview+250)
    
    //Draw the right score box
    draw_rectangle_color(view_xview+view_wview,view_yview+128,view_xview+rightpanelx,view_yview+view_hview,c_ltgray,c_ltgray,c_ltgray,c_ltgray,0)
    draw_triangle_color(view_xview+rightpanelx+1,view_yview+128,view_xview+rightpanelx+1,view_yview+view_hview,view_xview+rightpanelx-64,view_yview+128,c_ltgray,c_ltgray,c_ltgray,0)
    //Actual score stuff
    draw_set_font(fnt_score)
    draw_set_color(c_white)
    draw_text(view_xview+rightpanelx-25,view_yview+138,"Destroyed: "+string(score_kills))
    draw_text(view_xview+rightpanelx-16,view_yview+170,"Damage Done: "+string(score_damagedone))
    draw_text(view_xview+rightpanelx-7,view_yview+202,"Damage Taken: "+string(score_damagetaken))
    draw_text(view_xview+rightpanelx+2,view_yview+234,"Shots Fired: "+string(score_shotsfired))
    draw_text(view_xview+rightpanelx+11,view_yview+266,"Shots Hit: "+string(score_shotshit))
    draw_text(view_xview+rightpanelx+20,view_yview+298,"Hit %: "+string(score_hitpercentage))
}
//Draw stars
if(drawstars == 1){
    draw_sprite_ext(spr_star,0,view_xview+view_wview/2-143,view_yview+stary1,starscale1,starscale1,0,c_white,staralpha1)
    if(starnum &gt; 0){
        draw_sprite_ext(spr_star,0,view_xview+view_wview/2-71.5,view_yview+stary2,starscale2,starscale2,0,c_white,staralpha2)
    }
    if(starnum &gt; 1){
        draw_sprite_ext(spr_star,0,view_xview+view_wview/2,view_yview+stary3,starscale3,starscale3,0,c_white,staralpha3)
    }
    if(starnum &gt; 2){
        draw_sprite_ext(spr_star,0,view_xview+view_wview/2+71.5,view_yview+stary4,starscale4,starscale4,0,c_white,staralpha4)
    }
    if(starnum = starcount){
        draw_set_halign(fa_center)
        draw_set_font(fnt_score)
        draw_text(view_xview+view_wview/2,view_yview+70,starmessage[starcount-1])
        draw_set_halign(fa_left)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
