<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.sfxvolume = 0.8
global.musicvolume = 0.1
set_volumes();

question_endgame = 0

//START button
playbuttonx = view_wview-230 //Menu button offset for animations
playbuttony1 = 180
playbuttony2 = 252
startbuttonx = view_wview-180
startbuttony = playbuttony1-2
startbuttonalpha = 1
clickedplay = 0
playopen = 0
closingplay = 0
levelselectalpha = 0

//OPTIONS button
optionsbuttonx = view_wview-230 //Menu button offset for animations
optionsbuttony1 = 262
optionsbuttony2 = 314
optionstextx = view_wview-180
optionstexty = optionsbuttony1-2
optionstextalpha = 1
clickedoptions = 0
optionsopen = 0
closingoptions = 0

//OPTIONS entries
optalpha = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//START button --------------------------------------------------------------------------------------------------X
//Detect mouseclick on play button
if(mouse_check_button(mb_left) and clickedoptions == 0){
    if(mouse_x&gt;view_wview-280 and mouse_x&lt;view_wview and mouse_y&gt;180 and mouse_y&lt;251){
        clickedplay = 1
    }
//    else{
//        clickedplay = 0
//    }
}

//Animation bullshit for play button
if(clickedplay == 1 and startbuttonx &gt; view_wview/2-63 and room = rm_menu){
    if(playbuttonx &gt; -72){
        playbuttonx -= 22
    }
    if(playbuttony1 &gt; (view_hview/2)-36){
        //playbuttony1 -= 1
        playbuttony1 = (playbuttony1*9 + (view_hview/2)-36)/10
    }
    if(playbuttony2 &gt; (view_hview/2)+36){
        //playbuttony2 -= 1
        playbuttony2 = (playbuttony2*9 + (view_hview/2)+36)/10
    }
    if(startbuttonx &gt; view_wview/2-64){
        startbuttonx = (startbuttonx*9 + (view_wview/2-64))/10
    }
    startbuttony = playbuttony1-2
}
//Open up the whole screen
if(startbuttonx &lt; view_wview/2-63 and room = rm_menu and clickedplay == 1){
    if(playbuttony1 &gt; 0){
        playbuttony1 = (playbuttony1*9 + 0)/10
    }
    if(playbuttony2 &lt; view_hview){
        playbuttony2 = (playbuttony2*9 + view_hview)/10
    }
    if(startbuttony &gt; view_hview/2-64){
        startbuttony = (startbuttony*9 + view_hview/2-36)/10
    }
    if(startbuttonalpha &gt; 0){
        startbuttonalpha -= 0.05
    }
}
//Close
if(clickedplay == 0 and playopen == 0){
    if(playbuttony1 &lt; 180){
        playbuttony1 = (playbuttony1*9 + 180)/10
    }
    if(playbuttony2 &gt; 252){
        playbuttony2 = (playbuttony2*9 + 252)/10
    }
    if(startbuttony &lt; playbuttony1-2){
        startbuttony = (startbuttony*9 + playbuttony1-2)/10
    }
    if(startbuttonalpha &lt; 1){
        startbuttonalpha += 0.05
    }
    if(playbuttony1 &gt; 178){
        if(playbuttonx&lt;view_wview-230){
            playbuttonx = (playbuttonx*9 + view_wview-230)/10
        }
        if(startbuttonx &lt; view_wview-180){
            startbuttonx = (startbuttonx*7 + view_wview-180)/8
        }
    }
}
if(playbuttony2 &gt; view_hview-1 and room == rm_menu and clickedplay == 1){
//    room_goto_next();
    if(levelselectalpha&lt;1){
        levelselectalpha += 0.05
    }
    playopen = 1
}
//Get rid of self &amp; clean up because we're not on the menu anymore
if(room != rm_menu){
    if(playbuttony1 &lt; view_yview+view_hview){
        playbuttony1 = (playbuttony1*19 + view_yview+view_hview)/20
    }
    //if(playbuttony2 &gt; view_yview){
    //    playbuttony2 = (playbuttony2*9 + view_yview)/10
    //}
    if(playbuttony1 &gt; view_yview+view_hview-96){
        instance_destroy();
    }
}

//LEVEL SELECT --------------------------------------------------------------------------------------------------X
if(playopen == 1 and mouse_check_button_pressed(mb_left) and mouse_x&gt;256 and mouse_y&gt;202){
    room_goto(rm_arena1)
}

//OPTIONS button ------------------------------------------------------------------------------------------------X
//Detect mouseclick on options button
if(mouse_check_button(mb_left) and clickedplay == 0 and closingoptions = 0){
    if(mouse_x&gt;view_wview-280 and mouse_x&lt;view_wview and mouse_y&gt;262 and mouse_y&lt;313){
        clickedoptions = 1
    }
//    else{
//        clickedoptions = 0
//    }
}

//Animation bullshit for options button
if(clickedoptions == 1 and optionstextx &gt; view_wview/2-63 and room = rm_menu){
    if(optionsbuttonx &gt; -72){
        optionsbuttonx -= 22
    }
    if(optionsbuttony1 &gt; (view_hview/2)-36){
        //optionsbuttony1 -= 1
        optionsbuttony1 = (optionsbuttony1*9 + (view_hview/2)-36)/10
    }
    if(optionsbuttony2 &gt; (view_hview/2)+36){
        //optionsbuttony2 -= 1
        optionsbuttony2 = (optionsbuttony2*9 + (view_hview/2)+36)/10
    }
    if(optionstextx &gt; view_wview/2-64){
        optionstextx = (optionstextx*9 + (view_wview/2-64))/10
    }
    optionstexty = optionsbuttony1+8
}
//Open up the whole screen
if(optionstextx &lt; view_wview/2-63 and room = rm_menu and closingoptions = 0){
    if(optionsbuttony1 &gt; 0){
        optionsbuttony1 = (optionsbuttony1*9 + 0)/10
    }
    if(optionsbuttony2 &lt; view_hview){
        optionsbuttony2 = (optionsbuttony2*9 + view_hview)/10
    }
    if(optionstexty &gt; view_yview){
        optionstexty = (optionstexty*9 + view_yview)/10
    }
    if(optionstextalpha &gt; 0){
        //optionstextalpha -= 0.05
    }
}
if(optionsbuttony2 &gt; view_hview-1 and room == rm_menu and clickedoptions == 1){
    optionsopen = 1
}

//Click the 'back' button in the options menu
if(mouse_check_button(mb_left) and clickedoptions == 1 and mouse_x&gt;view_xview and mouse_x&lt;view_xview+36 and mouse_y&gt;328 and mouse_y&lt;360){
    closingoptions = 1
    optionsopen = 0
    clickedoptions = 0
}

if(closingoptions == 1){
    if(optionsbuttonx &lt; view_wview-230 and optionsbuttony1 &gt; 261){
        optionsbuttonx = (optionsbuttonx*14 + view_wview-230)/15
    }
    if(optionsbuttony1 &lt; 262){
        optionsbuttony1 = (optionsbuttony1*9 + 262)/10
    }
    if(optionsbuttony2 &gt; 314){
        optionsbuttony2 = (optionsbuttony2*9 + 314)/10
    }
    if(optionstextx &lt; view_wview-180 and optionsbuttony1 &gt; 261){
        optionstextx = (optionstextx*9 + view_wview-180)/10
    }
    if(optionstexty &lt; optionsbuttony1-2){
        optionstexty = (optionstexty*1 + optionsbuttony1-2)/2
    }
    //And reset
    if(optionstextx &gt;= view_wview-180.05){
        optionsbuttonx = view_wview-230 //Menu button offset for animations
        optionsbuttony1 = 262
        optionsbuttony2 = 314
        optionstextx = view_wview-180.05
        optionstexty = optionsbuttony1-2
        closingoptions = 0
    }
}

//Options menu sliders
//Music
if(mouse_check_button(mb_left) and mouse_x&gt;view_xview+360 and mouse_x&lt;view_xview+576 and mouse_y&gt;70 and mouse_y&lt;106){
    global.musicvolume = round(((mouse_x-360)/216)*8)/10
    set_volumes();
}
//SFX
if(mouse_check_button(mb_left) and mouse_x&gt;view_xview+360 and mouse_x&lt;view_xview+576 and mouse_y&gt;131 and mouse_y&lt;167){
    global.sfxvolume = round(((mouse_x-360)/216)*8)/10
    set_volumes();
}

//EXIT button ------------------------------------------------------------------------------------------------X

if(mouse_x&gt;view_xview and mouse_x&lt;view_xview+150 and mouse_y &gt; view_yview+view_hview-32 and mouse_y &lt; view_yview+view_hview and mouse_check_button(mb_left) and clickedoptions == 0 and clickedplay == 0 and closingoptions == 0){
    msg = show_question_async("Are you sure you wish to exit? Any unsaved progress will be lost.")
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_d;
i_d = ds_map_find_value(async_load, "id");
if i_d == msg{
    if ds_map_find_value(async_load, "status") = true{
        game_end()
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//START button
if(clickedoptions == 0){
    coolblue = make_color_rgb(0,148,255)
    //draw_sprite_ext(spr_button,0,playbuttonx,180,1,1,0,make_color_rgb(0,148,255),1)
    draw_triangle_color(playbuttonx+42,playbuttony1,playbuttonx+42,playbuttony2,playbuttonx,playbuttony2,coolblue,coolblue,coolblue,0)
    draw_rectangle_color(view_xview+playbuttonx+42,view_yview+playbuttony1,view_xview+view_wview,view_yview+playbuttony2-1,coolblue,coolblue,coolblue,coolblue,0)
    draw_set_font(fnt_menu)
    //draw_text_color(startbuttonx,startbuttony,"START",c_white,c_white,c_white,c_white,startbuttonalpha)
    draw_set_alpha(startbuttonalpha)
    draw_sprite(spr_start,0,startbuttonx,startbuttony+14)
    draw_set_alpha(1)
}

//LEVEL SELECT
if(clickedplay == 1 and playopen == 1){
    draw_sprite_ext(spr_levelselect,0,view_xview,view_yview+playbuttony1,1,1,0,c_white,levelselectalpha)
    if(obj_data.levelscompleted&lt;2){
        draw_sprite(spr_locked,0,view_xview+100,view_yview+view_hview-64+playbuttony1)
    }
    if(obj_data.levelscompleted&lt;3){
        draw_sprite(spr_locked,0,view_xview+148,view_yview+64+playbuttony1)
    }
    if(obj_data.levelscompleted&lt;4){
        draw_sprite(spr_locked,0,view_xview+view_wview-128,view_yview+64+playbuttony1)
    }
}
//OPTIONS button
if(clickedplay == 0){
    coolgray = make_color_rgb(150,150,150)
    draw_triangle_color(optionsbuttonx+42,optionsbuttony1,optionsbuttonx+42,optionsbuttony2,optionsbuttonx,optionsbuttony1,coolgray,coolgray,coolgray,0)
    draw_rectangle_color(view_xview+optionsbuttonx+42,view_yview+optionsbuttony1,view_xview+view_wview,view_yview+optionsbuttony2-1,coolgray,coolgray,coolgray,coolgray,0)
    draw_set_font(fnt_options)
    //draw_text_color(optionstextx,optionstexty,"OPTIONS",c_white,c_white,c_white,c_white,optionstextalpha)
    draw_set_alpha(optionstextalpha)
    draw_sprite(spr_options,0,optionstextx,optionstexty+8)
    draw_set_alpha(1)
    if(optionsopen == 1){
        draw_set_color(c_white)
        draw_arrow(view_xview+32,view_hview-16,view_xview+2,view_hview-16,32)
    }
}

//Draw OPTIONS
if(optionsopen == 1){
    if(optalpha &lt; 1){
        optalpha += 0.05
    }
    //Draw OPTIONS ENTRIES
    draw_set_alpha(optalpha)
    draw_set_font(fnt_score)
    //draw_text(view_xview+60,view_yview+75,"Music Volume")
    draw_sprite(spr_musicvolume,0,view_xview+60,view_yview+75)
    //draw_text(view_xview+60,view_yview+135,"SFX Volume")
    draw_sprite(spr_sfxvolume,0,view_xview+60,view_yview+135)
    //Draw volume sliders
    draw_sprite(spr_volumeslider,0,view_xview+360,view_yview+80)
    draw_sprite(spr_volumeslider,0,view_xview+360,view_yview+141)
    //Lets try and draw this stupid slider dongle thingus
    draw_sprite(spr_slidernub,0,view_xview+370+((global.musicvolume*10)*27),view_yview+80)
    //And for the sfx too
    draw_sprite(spr_slidernub,0,view_xview+370+((global.sfxvolume*10)*27),view_yview+141)
    draw_set_alpha(1)
}
else{
    optalpha = 0
}

//EXIT button
if(clickedoptions == 0 and clickedplay == 0){
    coolred = make_color_rgb(255,50,25)
    //draw_sprite_ext(spr_button,0,playbuttonx,180,1,1,0,make_color_rgb(0,148,255),1)
    draw_triangle_color(view_xview+128,view_yview+view_hview-32,view_xview+128,view_yview+view_hview,view_xview+150,view_yview+view_hview-32,coolred,coolred,coolred,0)
    draw_rectangle_color(view_xview,view_yview+view_hview-32,view_xview+128,view_yview+view_hview,coolred,coolred,coolred,coolred,0)
    draw_set_font(fnt_menu)
    //draw_text_color(startbuttonx,startbuttony,"START",c_white,c_white,c_white,c_white,startbuttonalpha)
    draw_set_alpha(startbuttonalpha)
    draw_sprite(spr_exitgame,0,view_xview+5,view_yview+view_hview-29)
    draw_set_alpha(1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Close options
if(clickedoptions == 1 and optionsopen == 1){
    closingoptions = 1
    optionsopen = 0
    clickedoptions = 0
}

//Close level select
if(clickedplay == 1 and playopen == 1){
    clickedplay = 0
    playopen = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
