<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_baddie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = obj_control.gamescale
image_yscale = obj_control.gamescale

target = noone //Does the baddie see the player?
badhealth = 100 //Health
badmaxhealth = badhealth
badhealthsmooth = 100 //Red bit of the health bar
badhealthsmoothdelay = 0 //Delay before the red bit starts going down
friction = 0.15
maxspeed = 2
turretang = image_angle
destx = x //only uses destx and desty when not targeting player
desty = y
showhealth = 0 //Currently showing the health bar?
redvalue = 255 //Turns red when shot
alarm[0] = 1
chunkflingdir = 0 //Store direction for particles

//Attack vars
canshoot = 1
attackdist = 180
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canshoot = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Health bar timeout
showhealth = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set a new destination to move to if we're bored
if(target = noone and distance_to_point(destx,desty &lt; 64)){
    destx = random_range(128,room_width-128)
    desty = random_range(128,room_height-128)
}
alarm[0] = choose(120,180,360)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Look where you're going
if(speed&gt;0){
    image_angle = rotate(image_angle,direction,4)
}

if(target = noone){
    turretang = rotate(turretang,direction,8)
}
else{
    turretang = rotate(turretang,point_direction(x,y,obj_player.x,obj_player.y),8)
}

//You will DIE
if(badhealth &lt;= 0){
    instance_destroy();
}

//Speed limit!
if(speed &gt; maxspeed){
    speed = maxspeed
}

//Move around if we don't see the player
if(distance_to_point(destx,desty) &gt; 64){
    motion_add(rotate(direction,point_direction(x,y,destx,desty),16),0.2)
}

//Turn red when hit but go back to normal
if(redvalue &lt; 255){
    redvalue += 3
}

if(badhealthsmooth&gt;badhealth){
    badhealthsmooth -= 2
}

//When we see the player --------

//Target the player
if(distance_to_object(obj_player)&lt;=attackdist){
    destx = x
    desty = y
    target = obj_player
}
if(distance_to_object(obj_player)&gt;attackdist*1.25){
    target = noone
}

//Shoot the player
if(target == obj_player and canshoot == 1){
    nnn = instance_create(x,y,obj_bullet)
    nnn.baddie = 1
    nnn.direction = turretang
    nnn.speed = 20
    part_tankbarrel();
    canshoot = 0
    alarm[2] = 180
}

//Chase the player
if(target == obj_player and distance_to_object(obj_player)&lt;(attackdist*1.25) and distance_to_object(obj_player)&gt;(attackdist/2)){
    motion_add(point_direction(x,y,obj_player.x,obj_player.y),0.2)
}

//Get out of the way
if(target == obj_player and distance_to_object(obj_player)&lt;=(attackdist/2)){
    motion_add(point_direction(x,y,obj_player.x,obj_player.y)+180,0.2)
    image_angle = rotate(image_angle,direction+180,16)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_baddie">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//motion_add(point_direction(x,y,other.x,other.y)+180,0.2)
move_outside_all(point_direction(x,y,other.x,other.y)+180,4)
//destx = x
//desty = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//motion_add(point_direction(x,y,other.x,other.y)+180,0.2)
move_outside_all(point_direction(x,y,other.x,other.y)+180,4)
destx = x
desty = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = make_color_rgb(255,redvalue,redvalue)
draw_self();
draw_sprite_ext(spr_baddie_turret,0,x,y,image_xscale,image_yscale,turretang,image_blend,image_alpha)

if(showhealth == 1){
    draw_set_alpha(0.9)
    draw_rectangle_color(x-32,y-64,x+32,y-48,c_dkgray,c_dkgray,c_dkgray,c_dkgray,0)
    draw_rectangle_color(x-32,y-64,x-32+(badhealthsmooth/1.5625),y-48,c_red,c_red,c_red,c_red,0) 
    draw_rectangle_color(x-32,y-64,x-32+(badhealth/1.5625),y-48,c_green,c_green,c_green,c_green,0)  
    draw_rectangle_color(x-32,y-64,x+32,y-48,c_black,c_black,c_black,c_black,1)
    draw_set_alpha(1)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
