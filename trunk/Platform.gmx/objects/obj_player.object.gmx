<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,lightmap)

xspeed = 0
yspeed = 0
maxspeedx = 8
maxspeedy = 64
grav = 0
jumping = false
playerstate = 0

//        light_create(x,y,radius,penetration,falloff,precision,lerpspeed,color,on)
lantern = light_create(x,y,512,128,128,128,0.4,make_color_rgb(32,32,32),true)
lantern2 = light_create(x,y,128,64,64,64,0.7,make_color_rgb(255,192,128),false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed /= 1.1
xspeed += keyboard_check(ord("D")) - keyboard_check(ord("A"))
xspeed = clamp(xspeed,-maxspeedx,maxspeedx)

//Collision with walls
if(place_free(x+xspeed,y-8))
{
    x += xspeed
    y -= 8
    move_contact_solid(270,8)
}
else if(place_free(x+xspeed,y+8))
{
    x += xspeed
    y += 8
    move_contact_solid(90,8)
}
else
{
    xspeed /= 4
}

//Collision with ground
if(place_free(x,y+max(1,yspeed)))
{
    grav = 0.5
}
else
{
    if(grav&gt;0)
    {
        move_contact_solid(270,yspeed)
        grav = 0
        yspeed = 0
    }
}

//Collision with ceil 
if(yspeed&lt;0 and !place_free(x, y+yspeed))
{
    move_outside_solid(270,8)
    yspeed = 0
}

yspeed += grav
yspeed = clamp(yspeed,-maxspeedy,maxspeedy)
y += yspeed

if(keyboard_check(vk_space) and !place_free(x,y+4))
{
    yspeed = -14
}

//State variables!!!!!!!!!!!!!
if (xspeed &gt; 0.5 or xspeed &lt; -0.5)
{
    if not (place_free(x,y+max(8,yspeed)))
    {
        playerstate = 1
    }
    else
    {
        playerstate = 2
    }
}
else
{
    if (place_free(x,y+max(8,yspeed)))
    {
        playerstate = 2
    }
    else
    {
        playerstate = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>light_update(lantern,x,y)
light_update(lantern2,mouse_x,mouse_y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lantern2.on = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lantern2.on = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var new;
new = light_create(mouse_x,mouse_y,128,64,128,32,0.5,c_orange,true)
light_add_flicker(new,4,20,12)
new.sprite_index = spr_torch
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var legvar;
draw_self();
switch (playerstate)
{
    case 0:
        legvar = spr_player_test_legs_idle
        break;
    case 1:
        legvar = spr_player_test_legs_run
        break;
    case 2:
        legvar = spr_player_test_legs_fall
        break;
};
draw_sprite_ext(legvar,0,x,y+sprite_height/2,sign(xspeed),1,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,48</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
