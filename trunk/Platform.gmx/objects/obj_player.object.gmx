<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,lightmap)
scr_controls_init()

xspeed = 0
yspeed = 0
maxspeedx = 8
maxspeedy = 64
grav = 0
jumping = false
playerstate = 0
controlsetupstep = 0
controlsetup = 0
controltext = 0
scr_skel_init();
curanim = anim_idle
facing = 1

//        light_create(x,y,radius,penetration,falloff,precision,lerpspeed,color,on)
lantern = light_create(x,y,512,128,128,128,0.4,make_color_rgb(32,32,32),true)
lantern2 = light_create(x,y,128,64,64,64,0.7,make_color_rgb(255,192,128),false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed /= 1.1
xspeed += keyboard_check(control_right) - keyboard_check(control_left)
xspeed = clamp(xspeed,-maxspeedx,maxspeedx)
if (xspeed != 0)
{
    facing = sign(xspeed)
}
//Collision with walls
if(place_free(x+xspeed,y-8))
{
    x += xspeed
    y -= 8
    move_contact_solid(270,8)
}
else if(place_free(x+xspeed,y+8))
{
    x += xspeed
    y += 8
    move_contact_solid(90,8)
}
else
{
    xspeed /= 4
}

//Collision with ground
if(place_free(x,y+max(1,yspeed)))
{
    grav = 0.5
}
else
{
    if(grav&gt;0)
    {
        move_contact_solid(270,yspeed)
        grav = 0
        yspeed = 0
    }
}

//Collision with ceil 
if(yspeed&lt;0 and !place_free(x, y+yspeed))
{
    move_outside_solid(270,8)
    yspeed = 0
}

yspeed += grav
yspeed = clamp(yspeed,-maxspeedy,maxspeedy)
y += yspeed

if(keyboard_check(control_up) and !place_free(x,y+4))
{
    yspeed = -14
}

//State variables!!
if (xspeed &gt; 1 or xspeed &lt; -1)
{
    if not (place_free(x,y+max(8,yspeed)))
    {
        playerstate = 1
    }
    else
    {
        playerstate = 2
    }
}
else
{
    if (place_free(x,y+max(8,yspeed)))
    {
        playerstate = 2
    }
    else
    {
        playerstate = 0
    }
}

//Animation
scr_skel_update();
timeline_index = curanim
timeline_running = true
timeline_loop = true

if (playerstate == 2)
{
    curanim = anim_jump
}
if (playerstate == 0)
{
    curanim = anim_idle
}
if (playerstate == 1)
{
    timeline_speed = abs(xspeed / 8)
    curanim = anim_run
}
else
{
    timeline_speed = 1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>light_update(lantern,x,y)
light_update(lantern2,mouse_x,mouse_y)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>VVControl SetupVV</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (controlsetup == 1)
{
    if (controlsetupstep &lt;= 6)
    {
        if (keyboard_check_pressed(vk_anykey))
        {
            switch (controlsetupstep)
            {
                case 0:
                    control_left = keyboard_lastkey
                    break;
                case 1:
                    control_right = keyboard_lastkey
                    break;
                case 2:
                    control_up = keyboard_lastkey
                    break;
                case 3:
                    control_down = keyboard_lastkey
                    break;
                case 4:
                    control_atk1 = keyboard_lastkey
                    break;
                case 5:
                    control_atk2 = keyboard_lastkey
                    break;
                case 6:
                    control_use = keyboard_lastkey
                    break;
            }
            io_clear()
            controlsetupstep += 1
        }
    }
    else
    {
        controlsetup = 0
        controlsetupstep = 0
    }
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lantern2.on = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lantern2.on = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var new;
new = light_create(mouse_x,mouse_y,128,64,128,32,0.5,c_orange,true)
light_add_flicker(new,4,20,12)
new.sprite_index = spr_torch
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_player.controlsetup == 1)
{
    switch (obj_player.controlsetupstep)
    {
        case 0:
            obj_player.controltext = "Left"
            break;
        case 1:
            obj_player.controltext = "Right"
            break;
        case 2:
            obj_player.controltext = "Jump"
            break;
        case 3:
            obj_player.controltext = "Down"
            break;
        case 4:
            obj_player.controltext = "Attack 1"
            break;
        case 5:
            obj_player.controltext = "Attack 2"
            break;
        case 6:
            obj_player.controltext = "Use"
            break;
    }
    draw_set_halign(fa_center)
    draw_set_color(c_white)
    draw_text(view_xview+view_wview/2,view_yview+view_hview/2,"Set the key to be used for "+string(obj_player.controltext))
    draw_set_halign(fa_left)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var legvar;
draw_self();
switch (playerstate)
{
    case 0:
        legvar = spr_player_test_legs_idle
        break;
    case 1:
        legvar = spr_player_test_legs_run
        break;
    case 2:
        legvar = spr_player_test_legs_fall
        break;
};
draw_sprite_ext(legvar,0,x,y+sprite_height/2,facing,1,image_angle,image_blend,image_alpha);

//Draw skeleton (spooky)
draw_line_color(skel_pelvis[0],skel_pelvis[1],skel_torso[0],skel_torso[1],c_blue,c_lime)
draw_line_color(skel_torso[0],skel_torso[1],skel_lshoulder[0],skel_lshoulder[1],c_blue,c_lime)
draw_line_color(skel_torso[0],skel_torso[1],skel_rshoulder[0],skel_rshoulder[1],c_blue,c_lime)
draw_line_color(skel_rshoulder[0],skel_rshoulder[1],skel_relbow[0],skel_relbow[1],c_blue,c_lime)
draw_line_color(skel_lshoulder[0],skel_lshoulder[1],skel_lelbow[0],skel_lelbow[1],c_blue,c_lime)
draw_line_color(skel_relbow[0],skel_relbow[1],skel_rhand[0],skel_rhand[1],c_blue,c_lime)
draw_line_color(skel_lelbow[0],skel_lelbow[1],skel_lhand[0],skel_lhand[1],c_blue,c_lime)
if (facing == 1)
{
    draw_line_color(skel_rhand[0],skel_rhand[1],skel_weapon1[0],skel_weapon1[1],c_purple,c_fuchsia)
}
else
{
    draw_line_color(skel_lhand[0],skel_lhand[1],skel_weapon1[0],skel_weapon1[1],c_purple,c_fuchsia)
}
draw_line_color(skel_pelvis[0],skel_pelvis[1],skel_lhip[0],skel_lhip[1],c_blue,c_lime)
draw_line_color(skel_pelvis[0],skel_pelvis[1],skel_rhip[0],skel_rhip[1],c_blue,c_lime)
draw_line_color(skel_lhip[0],skel_lhip[1],skel_lknee[0],skel_lknee[1],c_blue,c_lime)
draw_line_color(skel_rhip[0],skel_rhip[1],skel_rknee[0],skel_rknee[1],c_blue,c_lime)
draw_line_color(skel_lknee[0],skel_lknee[1],skel_lfoot[0],skel_lfoot[1],c_blue,c_lime)
draw_line_color(skel_rknee[0],skel_rknee[1],skel_rfoot[0],skel_rfoot[1],c_blue,c_lime)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controlsetup = 1
io_clear();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,48</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
