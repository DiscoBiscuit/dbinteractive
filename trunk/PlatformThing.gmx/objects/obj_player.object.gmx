<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Let's make our own variables because Game Maker is coded by autistic monkeys
global.p_health = 3
p_yspeed = 0;
p_xspeed = 0;
p_xspeedmax = 4;
p_yspeedmax = 12;
p_dropspeed = 0.25;
p_ydir = 0;
p_xdir = 1;
p_canjump = 0;
p_canmove = 0;
p_oldx = x;
p_oldy = y;
p_headx = x;
p_heady = y;
p_headang = 0;
p_bodyimage = spr_player_stand;
p_blink = 0;
alarm[0] = 10;
p_imageindex = 0;
p_headimageindex = 0;
pencil_angle = 16
pencil_x = x-24
pencil_y = y
pencil_length = 3
p_ouch = 0
p_invincible = 0
p_eyeimage = spr_player_eyes
p_scaredimageindex = 0
p_scared = 0
obj_control.spawn_x = xstart
obj_control.spawn_y = ystart
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p_eyeimage = spr_player_eyes
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p_invincible = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(p_blink == 1){
    p_blink = 0
}
else{
    if(irandom(100)&lt;=1){
        p_blink = 1
    }
}
alarm[0] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Detect if the ground is beneath our feet
if(collision_rectangle(bbox_left+1,y-32,bbox_right-2,y-32+p_yspeed+(sprite_height/2*p_ydir),obj_block,1,1) and global.p_health &gt; 0){
    p_canjump = 1
    if(p_ydir == -1){
        p_yspeed += 5
    }
}
else{
    p_canjump = 0
}
//Detect if there is a wall to our left or right
//if(collision_line(x,y,x+p_xspeed+(16*p_xdir),y,obj_block,1,1)){
//    p_canmove = 0
//}
if(collision_rectangle(x-(18*p_xdir),bbox_top,x+p_xspeed+(20*p_xdir),bbox_bottom-2,obj_block,1,1) and global.p_health &gt; 0){
    p_canmove = 0
}
else{
    p_canmove = 1
}
//Determine the directions we're going
if(p_yspeed != 0){
    p_ydir = sign(p_yspeed)
}
if(p_xspeed != 0){
    p_xdir = sign(p_xspeed)
}
//Gravity is applied if collision allows
if(p_canjump = 0 and p_yspeed &lt; p_yspeedmax){
    p_yspeed += p_dropspeed
}
//Gravity is turned off if we're touching the ground
if(p_canjump = 1){
    p_yspeed = 0
}
//Actually make the gravity move the player
if(p_yspeed != 0){
    y += p_yspeed
}

//Movement variable is updated to the left
if(keyboard_check(vk_left) and p_xspeed &gt; -p_xspeedmax and place_free(x+p_xspeed+(17*p_xdir),y) and not keyboard_check(vk_right)){
    p_xspeed -= 0.5
}
//Movement variable is updated to the right
if(keyboard_check(vk_right) and p_xspeed &lt; p_xspeedmax and place_free(x+p_xspeed+(17*p_xdir),y) and not keyboard_check(vk_left)){
    p_xspeed += 0.5
}
//Actually move the player as long as there's no wall
if(p_canmove == 1 and p_xspeed != 0){
    x += p_xspeed
}
//Slow the player down (friction)
if not(keyboard_check(vk_left) and keyboard_check(vk_right)){
    if(p_xspeed &gt; 0){
        p_xspeed -= 0.25
    }
    if(p_xspeed &lt; 0){
        p_xspeed += 0.25
    }
}
//Keep the player from being able to press left AND right
if(keyboard_check(vk_left) and keyboard_check(vk_right)){
    if(p_xspeed &gt; 0){
        p_xspeed -= 0.25
    }
    if(p_xspeed &lt; 0){
        p_xspeed += 0.25
    }
    if(p_canjump == 1){
        p_yspeed = -6
    }
}
//Jump
if(keyboard_check_pressed(vk_up) and p_canjump == 1){
    p_yspeed = -6
}

//Keep your head on!
p_headx = x;
p_heady = y-58;

//Determine what sprite to draw (animation)
if(p_imageindex &lt; 10 and p_bodyimage = spr_player_run){
    p_imageindex +=  abs(p_xspeed/13.75)
}
else{
    p_imageindex = 0
}
if(p_canjump == 1 and p_xspeed == 0){
    p_bodyimage = spr_player_stand
}
if(p_canjump == 1 and p_xspeed != 0){
    p_bodyimage = spr_player_run
}
//if(p_canjump == 0){
if not(collision_rectangle(bbox_left+1,y-32,bbox_right-2,y-30+(sprite_height/2*p_ydir),obj_block,1,1)){
    p_bodyimage = spr_player_jump
}

//Animate head
if(p_headimageindex &lt; 3){
    p_headimageindex += 0.25
}
else{
    p_headimageindex = 0
}

//Paincel
pencil_x = x-24*p_xdir
pencil_y = y

//Blink when invincible
if(p_invincible == 1){
    image_alpha = -image_alpha
}
else{
    image_alpha = 1
}

//Ouch!
if(place_meeting(x,y,obj_spiderguy) and p_invincible == 0){
    global.p_health -= 1
    p_yspeed = -4
    p_eyeimage = spr_player_eyes_ouch
    part_particles_create(global.fluffpart,x,y,global.fluffpart,irandom(2));
    if(place_free(x+6+(17*sign(instance_nearest(x,y,obj_spiderguy).x-x)),y)){
        p_xspeed -= 4 * sign(instance_nearest(x,y,obj_spiderguy).x-x)
    }
    alarm[1] = 80
    alarm[2] = 20
    p_invincible = 1
    if(global.p_health = 2){
        part_particles_create(global.heartpart,view_xview+80,view_yview+16,global.heartpart1,5);
    }
    if(global.p_health = 1){
        part_particles_create(global.heartpart,view_xview+48,view_yview+16,global.heartpart1,5);
    }
    if(global.p_health = 0){
        part_particles_create(global.heartpart,view_xview+16,view_yview+16,global.heartpart1,5);
    }
}

//Oh no a spider oh god oh man :(((
if(distance_to_object(obj_spiderguy) &lt; 100){
    if(p_scaredimageindex &lt; 1){
        p_scaredimageindex += 0.25
    }
}
else{
    p_scaredimageindex = 0
}

//Oops we're dead :(
if(global.p_health &lt;= 0){
    p_eyeimage = spr_player_eyes_ouch
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spiderguy = instance_nearest(x,y,obj_spiderguy)
//draw_self();
if(p_bodyimage == spr_player_stand){
    draw_sprite_ext(p_bodyimage,p_headimageindex,x,y-32,p_xdir/1.5,0.75,image_angle,image_blend,image_alpha)
}
else{
    draw_sprite_ext(p_bodyimage,p_imageindex,x,y-32,p_xdir/1.5,0.75,image_angle,image_blend,image_alpha)
}
draw_sprite_ext(spr_player_head,p_headimageindex,p_headx,p_heady,p_xdir/1.5,0.75,p_headang,image_blend,image_alpha)
if(p_blink == 0){
    if(distance_to_object(obj_spiderguy) &lt; 100 and p_eyeimage != spr_player_eyes_ouch and sign(spiderguy.x-x)*p_xdir == 1){
        draw_sprite_ext(spr_player_scared,p_scaredimageindex,p_headx,p_heady,p_xdir/1.5,0.75,p_headang,image_blend,image_alpha)
    }
    else{
        draw_sprite_ext(p_eyeimage,p_headimageindex,p_headx,p_heady,p_xdir/1.5,0.75,p_headang,image_blend,image_alpha)
    }
}
else{
    draw_sprite_ext(spr_player_blink,0,p_headx,p_heady,p_xdir/1.5,0.75,p_headang,image_blend,image_alpha)
}

//draw paincel

draw_sprite_ext(spr_pencillength,0,pencil_x,pencil_y,63*p_xdir,1,pencil_angle*p_xdir,c_white,1)
draw_sprite_ext(spr_pencilend,p_headimageindex,pencil_x,pencil_y,p_xdir,1,pencil_angle*p_xdir,c_white,1)
draw_sprite_ext(spr_penciltip1,p_headimageindex,pencil_x,pencil_y,p_xdir,1,pencil_angle*p_xdir,c_white,1)
draw_sprite_ext(spr_player_hands1,p_headimageindex,x,y-26,p_xdir,1,0,c_white,image_alpha)


/*
//Draw the collision line between the player and the ground
draw_set_color(c_red)
draw_rectangle(bbox_left+1,y-32,bbox_right-2,y-32+p_yspeed+(sprite_height/2*p_ydir),1)
//Draw the collision line between the player and the wall
draw_set_color(c_blue)
draw_rectangle(x-(18*p_xdir),bbox_top,x+p_xspeed+(20*p_xdir),bbox_bottom-2,1)
*/

//Make the player face the direction he's going
if(p_xspeed != 0){
    image_xscale = sign(p_xspeed)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
