<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed = 0
yspeed = 0

lastnode = noone

x = room_width/2
y = room_height/3
alarm[0] = 10
cavetexture = sprite_get_texture(tex_cave,0)
texture_set_repeat(true)

c1 = make_color_rgb(128,64,0)
c2 = make_color_rgb(64,32,0)

texstart = 0
sections = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 10
var new;
new = instance_create(x,y,obj_dignode)
new.parent = lastnode
new.direction = direction
new.cavetexture = sprite_get_texture(tex_cave,0)

new.t_start = texstart
new.t_end = texstart+(1/sections)
texstart += (1/sections)
if(texstart&gt;=1){texstart-=1}

lastnode = new
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed /= 1.02
x += xspeed

direction = point_direction(0,0,xspeed,4)
yspeed = lengthdir_y(4,direction)

background_y -= yspeed
if(background_y&gt;256){background_y-=256}

with(obj_dignode)
{
    y-= obj_player.yspeed
    if(y&lt;-64)
    {
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_x&lt;room_width/2)
{
    xspeed -= 1
}
else
{
    xspeed += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
globalvar digwidth;
digwidth = 64

draw_text(0,0,instance_count)
if(instance_exists(lastnode))
{
    
    var c,texoff;
    c = 6
    
    texoff = -(texstart+alarm[0]/40)
    
    draw_primitive_begin_texture(pr_trianglefan,cavetexture)
    draw_vertex_texture_color(x,y,0.5,0.5,c_white,1)
    for(i=0;i&lt;=c;i++)
    {
        draw_vertex_texture_color(x+lengthdir_x(digwidth,direction-i*(90/c)),y+lengthdir_y(digwidth,direction-i*(90/c)),0,1- i/(c+1) +texoff,c_white,1)
    }
    draw_vertex_texture_color(lastnode.x+lengthdir_x(-digwidth,lastnode.direction+90),lastnode.y+lengthdir_y(-digwidth,lastnode.direction+90),0,texoff,c_white,1)
    draw_vertex_texture_color(lastnode.x+lengthdir_x(digwidth,lastnode.direction+90),lastnode.y+lengthdir_y(digwidth,lastnode.direction+90),1,texoff,c_white,1)
    draw_primitive_end()
    
    draw_primitive_begin_texture(pr_trianglefan,cavetexture)
    draw_vertex_texture_color(x,y,0.5,0.5,c_white,1)
    for(i=0;i&lt;=c;i++)
    {
        draw_vertex_texture_color(x+lengthdir_x(digwidth,direction+i*(90/c)),y+lengthdir_y(digwidth,direction+i*(90/c)),1,1- i/(c+1) +texoff,c_white,1)
    }
    draw_vertex_texture_color(lastnode.x+lengthdir_x(digwidth,lastnode.direction+90),lastnode.y+lengthdir_y(digwidth,lastnode.direction+90),1,texoff,c_white,1)
    draw_primitive_end()
}

with(obj_dignode)
{
    if(instance_exists(parent))
    {
        draw_primitive_begin_texture(pr_trianglestrip,cavetexture)
        draw_vertex_texture_color(x+lengthdir_x(-digwidth,direction+90),y+lengthdir_y(-digwidth,direction+90),0,t_end,c_white,1)
        draw_vertex_texture_color(x+lengthdir_x(digwidth,direction+90),y+lengthdir_y(digwidth,direction+90),1,t_end,c_white,1)
        
        draw_vertex_texture_color(parent.x+lengthdir_x(-digwidth,parent.direction+90),parent.y+lengthdir_y(-digwidth,parent.direction+90),0,t_start,c_white,1)
        draw_vertex_texture_color(parent.x+lengthdir_x(digwidth,parent.direction+90),parent.y+lengthdir_y(digwidth,parent.direction+90),1,t_start,c_white,1)
        draw_primitive_end()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
