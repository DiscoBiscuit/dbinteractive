<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>background_vspeed[0] = 0.25;
background_hspeed[0] = -0.25;

selected = 0;
rot = 0;
item = 0;
menu_x = room_width/2;
menu_y = 0;
menu_width = 1920;
menu_height = 1920;
mx = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selected += keyboard_check_pressed(vk_left)-keyboard_check_pressed(vk_right);
rot -= angle_difference(rot,selected*(360/image_number))/(0.2*room_speed);
item =- selected mod image_number;
if (item) &lt; 0
{
    item += image_number;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if point_distance(mx,0,mouse_x,0) &gt; 64
{
    if mx-mouse_x &gt; 0
    {
        selected -= 1;
    }
    else
    {
        selected += 1;
    }
}
if point_distance(mx,0,mouse_x,0) &lt; 8
{
    switch (item) 
    {
        case 0:
            room_goto(rm_game_laser);
            break;
        case 1:
            room_goto(rm_game_finger);
            break;
        case 2:
            room_goto(rm_game_mouse);
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mx = mouse_x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var pr, i;
i=0;
draw_sprite_ext(spr_menu_gradient,0,0,room_height/2,1080,1,0,c_white,1);

pr=ds_priority_create();

repeat (image_number) 
{
    ds_priority_add(pr,i,lengthdir_y(1,(rot-90)+i*(360/image_number)));
    i+=1;
}

repeat (image_number) 
{
    i=ds_priority_delete_min(pr);
    draw_sprite_ext(sprite_index,i,menu_x+lengthdir_x(menu_width/2,(rot-90)+i*(360/image_number)),menu_y+lengthdir_y(menu_height/2,(rot-90)+i*(360/image_number)),1+lengthdir_y(menu_height/2,(rot-90)+i*(360/image_number))/(menu_height*2),1+lengthdir_y(menu_height/2,(rot-90)+i*(360/image_number))/(menu_height*2),0,c_white,1);
}

ds_priority_destroy(pr);

/*
var text;
switch (item)
{
    case 0: 
        text="Play" 
        break;
}

draw_set_halign(fa_center);
draw_text(320,320,text);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>256,256</point>
    <point>256,256</point>
  </PhysicsShapePoints>
</object>
