<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hex</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scale = obj_control.hexw/(sprite_get_height(spr_hex)*sin(degtorad(60))+24)
image_xscale = scale
image_yscale = scale
gem = 0
active = false
clickme = false
counted = 0
status = 1
lookout = 0
lookout_smooth = 0
size = 1
pulse = random_range(0,100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 1 + (sin(pulse/32)/32)
if status == 0
{
    pulse += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(clickme = true and status&gt;0)
{

    var adj,upgrade;
    upgrade = false
    
    if(gem&gt;0 and active==true)
    {
        check_should_active(true)
        gem += 1
        if(gem==2)
            addscore(50)
        if(gem==3)
            addscore(100)
        if(gem==4)
            addscore(250)
        if(gem==5)
            addscore(500)
        lookout = irandom(6)
        lookout_smooth = lookout
        audio_play_sound(snd_upgrade,1,false)
        upgrade = true
        if(active==true)
        {
            check_should_active(false)
        }
        if(lost==false)
        {
            spread()
        }
    }
    
    if(gem==0)
    {
        gem = 1
        if(lost==false)
        {
            spread()
            addscore(10)
        }
        audio_play_sound(snd_new,1,false)
        upgrade = true
    }
    
    if(upgrade==true and gem&lt;5)
    {
        check_should_active(false)
    }
    if(gem&gt;5)
    {
        gem = 0
    }
    
    with(obj_hex)
    {
        if(status&gt;0)
        {
            status = 1
        }
    }
        
    with(obj_hex)
    {
        if(status&gt;0)
        {
            if(gem==2)
            {
                clean(id)
            }
            if(gem==3)
            {
                clean(id)
                adj = get_adjacent(lookout)
                if(instance_exists(adj))
                {
                    if(adj.status==0)
                    addscore(20,adj.x,adj.y)
                    clean(adj)
                }
            }
            if(gem==4)
            {
                clean(id)
                for(d=0;d&lt;3;d+=1)
                {
                    adj = get_adjacent(lookout+d)
                    if(instance_exists(adj))
                    {
                        if(adj.status==0)
                        addscore(35,adj.x,adj.y)
                        clean(adj)
                    }
                }
            }
            if(gem==5)
            {
                clean(id)
                for(d=0;d&lt;6;d+=1)
                {
                    adj = get_adjacent(d)
                    if(instance_exists(adj))
                    {
                        if(adj.status==0)
                        addscore(50,adj.x,adj.y)
                        clean(adj)
                    }
                }
            }
        }
    }
}

if(lost==0)
{
    if(ds_list_size(obj_control.hexes_infected)==0)
    {
        lost = -1
        obj_control.alarm[0] = 120
        audio_play_sound(snd_win,2,false)
    }
    else
    {
        lost = 1
        with(obj_hex)
        {
            if( (status&gt;0 and gem==0) or active==true )
            {
                lost = 0
            }
        }
        if(lost==1)
        {
            obj_control.alarm[0] = 120
            audio_play_sound(snd_lose,2,false)
        }
    }
}

clickme = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(lost==0)
{
    clickme = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if status == 0
{
    image_xscale = scale*size;
    image_yscale = scale*size;
}
else
{
    image_xscale = scale;
    image_yscale = scale;
}
draw_sprite_ext(sprite_index,status,x+scale*10,y+scale*10,image_xscale,image_yscale,image_angle,merge_color(image_blend,c_gray,0.5),image_alpha/2);
draw_sprite_ext(sprite_index,status,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha)
if(gem&gt;0)
{
    lookout_smooth = (lookout_smooth*4 + lookout)/5
    draw_sprite_ext(spr_gem,gem-1,x,y,scale*1.65,scale*1.65,lookout_smooth*60,c_white,0.25)
    
    if(active==true)
    {
        draw_sprite_ext(spr_halo,0,x,y,scale*4,scale*4,current_time/10,c_white,0.2+sin(current_time/100)*0.3)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
